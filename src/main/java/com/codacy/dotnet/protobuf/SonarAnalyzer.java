// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AnalyzerReport.proto

package com.codacy.dotnet.protobuf;

public final class SonarAnalyzer {
  private SonarAnalyzer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code sonaranalyzer.TokenType}
   */
  public enum TokenType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>TYPE_NAME = 1;</code>
     */
    TYPE_NAME(1),
    /**
     * <code>NUMERIC_LITERAL = 2;</code>
     */
    NUMERIC_LITERAL(2),
    /**
     * <code>STRING_LITERAL = 3;</code>
     */
    STRING_LITERAL(3),
    /**
     * <code>KEYWORD = 4;</code>
     */
    KEYWORD(4),
    /**
     * <code>COMMENT = 5;</code>
     */
    COMMENT(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>TYPE_NAME = 1;</code>
     */
    public static final int TYPE_NAME_VALUE = 1;
    /**
     * <code>NUMERIC_LITERAL = 2;</code>
     */
    public static final int NUMERIC_LITERAL_VALUE = 2;
    /**
     * <code>STRING_LITERAL = 3;</code>
     */
    public static final int STRING_LITERAL_VALUE = 3;
    /**
     * <code>KEYWORD = 4;</code>
     */
    public static final int KEYWORD_VALUE = 4;
    /**
     * <code>COMMENT = 5;</code>
     */
    public static final int COMMENT_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TokenType valueOf(int value) {
      return forNumber(value);
    }

    public static TokenType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return TYPE_NAME;
        case 2: return NUMERIC_LITERAL;
        case 3: return STRING_LITERAL;
        case 4: return KEYWORD;
        case 5: return COMMENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TokenType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TokenType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TokenType>() {
            public TokenType findValueByNumber(int number) {
              return TokenType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return SonarAnalyzer.getDescriptor().getEnumTypes().get(0);
    }

    private static final TokenType[] VALUES = values();

    public static TokenType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TokenType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sonaranalyzer.TokenType)
  }

  public interface TextRangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sonaranalyzer.TextRange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 start_line = 1;</code>
     */
    int getStartLine();

    /**
     * <pre>
     * End line (inclusive)
     * </pre>
     *
     * <code>int32 end_line = 2;</code>
     */
    int getEndLine();

    /**
     * <code>int32 start_offset = 3;</code>
     */
    int getStartOffset();

    /**
     * <code>int32 end_offset = 4;</code>
     */
    int getEndOffset();
  }
  /**
   * <pre>
   * Lines start at 1 and line offsets start at 0
   * </pre>
   *
   * Protobuf type {@code sonaranalyzer.TextRange}
   */
  public  static final class TextRange extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sonaranalyzer.TextRange)
      TextRangeOrBuilder {
    // Use TextRange.newBuilder() to construct.
    private TextRange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TextRange() {
      startLine_ = 0;
      endLine_ = 0;
      startOffset_ = 0;
      endOffset_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TextRange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              startLine_ = input.readInt32();
              break;
            }
            case 16: {

              endLine_ = input.readInt32();
              break;
            }
            case 24: {

              startOffset_ = input.readInt32();
              break;
            }
            case 32: {

              endOffset_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SonarAnalyzer.internal_static_sonaranalyzer_TextRange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SonarAnalyzer.internal_static_sonaranalyzer_TextRange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SonarAnalyzer.TextRange.class, SonarAnalyzer.TextRange.Builder.class);
    }

    public static final int START_LINE_FIELD_NUMBER = 1;
    private int startLine_;
    /**
     * <code>int32 start_line = 1;</code>
     */
    public int getStartLine() {
      return startLine_;
    }

    public static final int END_LINE_FIELD_NUMBER = 2;
    private int endLine_;
    /**
     * <pre>
     * End line (inclusive)
     * </pre>
     *
     * <code>int32 end_line = 2;</code>
     */
    public int getEndLine() {
      return endLine_;
    }

    public static final int START_OFFSET_FIELD_NUMBER = 3;
    private int startOffset_;
    /**
     * <code>int32 start_offset = 3;</code>
     */
    public int getStartOffset() {
      return startOffset_;
    }

    public static final int END_OFFSET_FIELD_NUMBER = 4;
    private int endOffset_;
    /**
     * <code>int32 end_offset = 4;</code>
     */
    public int getEndOffset() {
      return endOffset_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (startLine_ != 0) {
        output.writeInt32(1, startLine_);
      }
      if (endLine_ != 0) {
        output.writeInt32(2, endLine_);
      }
      if (startOffset_ != 0) {
        output.writeInt32(3, startOffset_);
      }
      if (endOffset_ != 0) {
        output.writeInt32(4, endOffset_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (startLine_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, startLine_);
      }
      if (endLine_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, endLine_);
      }
      if (startOffset_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, startOffset_);
      }
      if (endOffset_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, endOffset_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SonarAnalyzer.TextRange)) {
        return super.equals(obj);
      }
      SonarAnalyzer.TextRange other = (SonarAnalyzer.TextRange) obj;

      boolean result = true;
      result = result && (getStartLine()
          == other.getStartLine());
      result = result && (getEndLine()
          == other.getEndLine());
      result = result && (getStartOffset()
          == other.getStartOffset());
      result = result && (getEndOffset()
          == other.getEndOffset());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + START_LINE_FIELD_NUMBER;
      hash = (53 * hash) + getStartLine();
      hash = (37 * hash) + END_LINE_FIELD_NUMBER;
      hash = (53 * hash) + getEndLine();
      hash = (37 * hash) + START_OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getStartOffset();
      hash = (37 * hash) + END_OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getEndOffset();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SonarAnalyzer.TextRange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.TextRange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.TextRange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.TextRange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.TextRange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.TextRange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.TextRange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.TextRange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.TextRange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.TextRange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SonarAnalyzer.TextRange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Lines start at 1 and line offsets start at 0
     * </pre>
     *
     * Protobuf type {@code sonaranalyzer.TextRange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sonaranalyzer.TextRange)
        SonarAnalyzer.TextRangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SonarAnalyzer.internal_static_sonaranalyzer_TextRange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SonarAnalyzer.internal_static_sonaranalyzer_TextRange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SonarAnalyzer.TextRange.class, SonarAnalyzer.TextRange.Builder.class);
      }

      // Construct using org.sonarsource.dotnet.protobuf.SonarAnalyzer.TextRange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        startLine_ = 0;

        endLine_ = 0;

        startOffset_ = 0;

        endOffset_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SonarAnalyzer.internal_static_sonaranalyzer_TextRange_descriptor;
      }

      public SonarAnalyzer.TextRange getDefaultInstanceForType() {
        return SonarAnalyzer.TextRange.getDefaultInstance();
      }

      public SonarAnalyzer.TextRange build() {
        SonarAnalyzer.TextRange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SonarAnalyzer.TextRange buildPartial() {
        SonarAnalyzer.TextRange result = new SonarAnalyzer.TextRange(this);
        result.startLine_ = startLine_;
        result.endLine_ = endLine_;
        result.startOffset_ = startOffset_;
        result.endOffset_ = endOffset_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SonarAnalyzer.TextRange) {
          return mergeFrom((SonarAnalyzer.TextRange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SonarAnalyzer.TextRange other) {
        if (other == SonarAnalyzer.TextRange.getDefaultInstance()) return this;
        if (other.getStartLine() != 0) {
          setStartLine(other.getStartLine());
        }
        if (other.getEndLine() != 0) {
          setEndLine(other.getEndLine());
        }
        if (other.getStartOffset() != 0) {
          setStartOffset(other.getStartOffset());
        }
        if (other.getEndOffset() != 0) {
          setEndOffset(other.getEndOffset());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SonarAnalyzer.TextRange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SonarAnalyzer.TextRange) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int startLine_ ;
      /**
       * <code>int32 start_line = 1;</code>
       */
      public int getStartLine() {
        return startLine_;
      }
      /**
       * <code>int32 start_line = 1;</code>
       */
      public Builder setStartLine(int value) {
        
        startLine_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 start_line = 1;</code>
       */
      public Builder clearStartLine() {
        
        startLine_ = 0;
        onChanged();
        return this;
      }

      private int endLine_ ;
      /**
       * <pre>
       * End line (inclusive)
       * </pre>
       *
       * <code>int32 end_line = 2;</code>
       */
      public int getEndLine() {
        return endLine_;
      }
      /**
       * <pre>
       * End line (inclusive)
       * </pre>
       *
       * <code>int32 end_line = 2;</code>
       */
      public Builder setEndLine(int value) {
        
        endLine_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * End line (inclusive)
       * </pre>
       *
       * <code>int32 end_line = 2;</code>
       */
      public Builder clearEndLine() {
        
        endLine_ = 0;
        onChanged();
        return this;
      }

      private int startOffset_ ;
      /**
       * <code>int32 start_offset = 3;</code>
       */
      public int getStartOffset() {
        return startOffset_;
      }
      /**
       * <code>int32 start_offset = 3;</code>
       */
      public Builder setStartOffset(int value) {
        
        startOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 start_offset = 3;</code>
       */
      public Builder clearStartOffset() {
        
        startOffset_ = 0;
        onChanged();
        return this;
      }

      private int endOffset_ ;
      /**
       * <code>int32 end_offset = 4;</code>
       */
      public int getEndOffset() {
        return endOffset_;
      }
      /**
       * <code>int32 end_offset = 4;</code>
       */
      public Builder setEndOffset(int value) {
        
        endOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 end_offset = 4;</code>
       */
      public Builder clearEndOffset() {
        
        endOffset_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:sonaranalyzer.TextRange)
    }

    // @@protoc_insertion_point(class_scope:sonaranalyzer.TextRange)
    private static final SonarAnalyzer.TextRange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SonarAnalyzer.TextRange();
    }

    public static SonarAnalyzer.TextRange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TextRange>
        PARSER = new com.google.protobuf.AbstractParser<TextRange>() {
      public TextRange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TextRange(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TextRange> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TextRange> getParserForType() {
      return PARSER;
    }

    public SonarAnalyzer.TextRange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TokenTypeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sonaranalyzer.TokenTypeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string file_path = 1;</code>
     */
    java.lang.String getFilePath();
    /**
     * <code>string file_path = 1;</code>
     */
    com.google.protobuf.ByteString
        getFilePathBytes();

    /**
     * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
     */
    java.util.List<SonarAnalyzer.TokenTypeInfo.TokenInfo>
        getTokenInfoList();
    /**
     * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
     */
    SonarAnalyzer.TokenTypeInfo.TokenInfo getTokenInfo(int index);
    /**
     * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
     */
    int getTokenInfoCount();
    /**
     * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
     */
    java.util.List<? extends SonarAnalyzer.TokenTypeInfo.TokenInfoOrBuilder>
        getTokenInfoOrBuilderList();
    /**
     * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
     */
    SonarAnalyzer.TokenTypeInfo.TokenInfoOrBuilder getTokenInfoOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Used for code coloring
   * </pre>
   *
   * Protobuf type {@code sonaranalyzer.TokenTypeInfo}
   */
  public  static final class TokenTypeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sonaranalyzer.TokenTypeInfo)
      TokenTypeInfoOrBuilder {
    // Use TokenTypeInfo.newBuilder() to construct.
    private TokenTypeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TokenTypeInfo() {
      filePath_ = "";
      tokenInfo_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TokenTypeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              filePath_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                tokenInfo_ = new java.util.ArrayList<SonarAnalyzer.TokenTypeInfo.TokenInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              tokenInfo_.add(
                  input.readMessage(SonarAnalyzer.TokenTypeInfo.TokenInfo.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          tokenInfo_ = java.util.Collections.unmodifiableList(tokenInfo_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SonarAnalyzer.internal_static_sonaranalyzer_TokenTypeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SonarAnalyzer.internal_static_sonaranalyzer_TokenTypeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SonarAnalyzer.TokenTypeInfo.class, SonarAnalyzer.TokenTypeInfo.Builder.class);
    }

    public interface TokenInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:sonaranalyzer.TokenTypeInfo.TokenInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.sonaranalyzer.TokenType token_type = 1;</code>
       */
      int getTokenTypeValue();
      /**
       * <code>.sonaranalyzer.TokenType token_type = 1;</code>
       */
      SonarAnalyzer.TokenType getTokenType();

      /**
       * <code>.sonaranalyzer.TextRange text_range = 2;</code>
       */
      boolean hasTextRange();
      /**
       * <code>.sonaranalyzer.TextRange text_range = 2;</code>
       */
      SonarAnalyzer.TextRange getTextRange();
      /**
       * <code>.sonaranalyzer.TextRange text_range = 2;</code>
       */
      SonarAnalyzer.TextRangeOrBuilder getTextRangeOrBuilder();
    }
    /**
     * Protobuf type {@code sonaranalyzer.TokenTypeInfo.TokenInfo}
     */
    public  static final class TokenInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:sonaranalyzer.TokenTypeInfo.TokenInfo)
        TokenInfoOrBuilder {
      // Use TokenInfo.newBuilder() to construct.
      private TokenInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TokenInfo() {
        tokenType_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private TokenInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();

                tokenType_ = rawValue;
                break;
              }
              case 18: {
                SonarAnalyzer.TextRange.Builder subBuilder = null;
                if (textRange_ != null) {
                  subBuilder = textRange_.toBuilder();
                }
                textRange_ = input.readMessage(SonarAnalyzer.TextRange.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(textRange_);
                  textRange_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SonarAnalyzer.internal_static_sonaranalyzer_TokenTypeInfo_TokenInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SonarAnalyzer.internal_static_sonaranalyzer_TokenTypeInfo_TokenInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SonarAnalyzer.TokenTypeInfo.TokenInfo.class, SonarAnalyzer.TokenTypeInfo.TokenInfo.Builder.class);
      }

      public static final int TOKEN_TYPE_FIELD_NUMBER = 1;
      private int tokenType_;
      /**
       * <code>.sonaranalyzer.TokenType token_type = 1;</code>
       */
      public int getTokenTypeValue() {
        return tokenType_;
      }
      /**
       * <code>.sonaranalyzer.TokenType token_type = 1;</code>
       */
      public SonarAnalyzer.TokenType getTokenType() {
        SonarAnalyzer.TokenType result = SonarAnalyzer.TokenType.valueOf(tokenType_);
        return result == null ? SonarAnalyzer.TokenType.UNRECOGNIZED : result;
      }

      public static final int TEXT_RANGE_FIELD_NUMBER = 2;
      private SonarAnalyzer.TextRange textRange_;
      /**
       * <code>.sonaranalyzer.TextRange text_range = 2;</code>
       */
      public boolean hasTextRange() {
        return textRange_ != null;
      }
      /**
       * <code>.sonaranalyzer.TextRange text_range = 2;</code>
       */
      public SonarAnalyzer.TextRange getTextRange() {
        return textRange_ == null ? SonarAnalyzer.TextRange.getDefaultInstance() : textRange_;
      }
      /**
       * <code>.sonaranalyzer.TextRange text_range = 2;</code>
       */
      public SonarAnalyzer.TextRangeOrBuilder getTextRangeOrBuilder() {
        return getTextRange();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (tokenType_ != SonarAnalyzer.TokenType.UNKNOWN.getNumber()) {
          output.writeEnum(1, tokenType_);
        }
        if (textRange_ != null) {
          output.writeMessage(2, getTextRange());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (tokenType_ != SonarAnalyzer.TokenType.UNKNOWN.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, tokenType_);
        }
        if (textRange_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getTextRange());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SonarAnalyzer.TokenTypeInfo.TokenInfo)) {
          return super.equals(obj);
        }
        SonarAnalyzer.TokenTypeInfo.TokenInfo other = (SonarAnalyzer.TokenTypeInfo.TokenInfo) obj;

        boolean result = true;
        result = result && tokenType_ == other.tokenType_;
        result = result && (hasTextRange() == other.hasTextRange());
        if (hasTextRange()) {
          result = result && getTextRange()
              .equals(other.getTextRange());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TOKEN_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + tokenType_;
        if (hasTextRange()) {
          hash = (37 * hash) + TEXT_RANGE_FIELD_NUMBER;
          hash = (53 * hash) + getTextRange().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SonarAnalyzer.TokenTypeInfo.TokenInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SonarAnalyzer.TokenTypeInfo.TokenInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SonarAnalyzer.TokenTypeInfo.TokenInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SonarAnalyzer.TokenTypeInfo.TokenInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SonarAnalyzer.TokenTypeInfo.TokenInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SonarAnalyzer.TokenTypeInfo.TokenInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SonarAnalyzer.TokenTypeInfo.TokenInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SonarAnalyzer.TokenTypeInfo.TokenInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SonarAnalyzer.TokenTypeInfo.TokenInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SonarAnalyzer.TokenTypeInfo.TokenInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SonarAnalyzer.TokenTypeInfo.TokenInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code sonaranalyzer.TokenTypeInfo.TokenInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:sonaranalyzer.TokenTypeInfo.TokenInfo)
          SonarAnalyzer.TokenTypeInfo.TokenInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SonarAnalyzer.internal_static_sonaranalyzer_TokenTypeInfo_TokenInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SonarAnalyzer.internal_static_sonaranalyzer_TokenTypeInfo_TokenInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SonarAnalyzer.TokenTypeInfo.TokenInfo.class, SonarAnalyzer.TokenTypeInfo.TokenInfo.Builder.class);
        }

        // Construct using org.sonarsource.dotnet.protobuf.SonarAnalyzer.TokenTypeInfo.TokenInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          tokenType_ = 0;

          if (textRangeBuilder_ == null) {
            textRange_ = null;
          } else {
            textRange_ = null;
            textRangeBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SonarAnalyzer.internal_static_sonaranalyzer_TokenTypeInfo_TokenInfo_descriptor;
        }

        public SonarAnalyzer.TokenTypeInfo.TokenInfo getDefaultInstanceForType() {
          return SonarAnalyzer.TokenTypeInfo.TokenInfo.getDefaultInstance();
        }

        public SonarAnalyzer.TokenTypeInfo.TokenInfo build() {
          SonarAnalyzer.TokenTypeInfo.TokenInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SonarAnalyzer.TokenTypeInfo.TokenInfo buildPartial() {
          SonarAnalyzer.TokenTypeInfo.TokenInfo result = new SonarAnalyzer.TokenTypeInfo.TokenInfo(this);
          result.tokenType_ = tokenType_;
          if (textRangeBuilder_ == null) {
            result.textRange_ = textRange_;
          } else {
            result.textRange_ = textRangeBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SonarAnalyzer.TokenTypeInfo.TokenInfo) {
            return mergeFrom((SonarAnalyzer.TokenTypeInfo.TokenInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SonarAnalyzer.TokenTypeInfo.TokenInfo other) {
          if (other == SonarAnalyzer.TokenTypeInfo.TokenInfo.getDefaultInstance()) return this;
          if (other.tokenType_ != 0) {
            setTokenTypeValue(other.getTokenTypeValue());
          }
          if (other.hasTextRange()) {
            mergeTextRange(other.getTextRange());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SonarAnalyzer.TokenTypeInfo.TokenInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SonarAnalyzer.TokenTypeInfo.TokenInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int tokenType_ = 0;
        /**
         * <code>.sonaranalyzer.TokenType token_type = 1;</code>
         */
        public int getTokenTypeValue() {
          return tokenType_;
        }
        /**
         * <code>.sonaranalyzer.TokenType token_type = 1;</code>
         */
        public Builder setTokenTypeValue(int value) {
          tokenType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.sonaranalyzer.TokenType token_type = 1;</code>
         */
        public SonarAnalyzer.TokenType getTokenType() {
          SonarAnalyzer.TokenType result = SonarAnalyzer.TokenType.valueOf(tokenType_);
          return result == null ? SonarAnalyzer.TokenType.UNRECOGNIZED : result;
        }
        /**
         * <code>.sonaranalyzer.TokenType token_type = 1;</code>
         */
        public Builder setTokenType(SonarAnalyzer.TokenType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          tokenType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.sonaranalyzer.TokenType token_type = 1;</code>
         */
        public Builder clearTokenType() {
          
          tokenType_ = 0;
          onChanged();
          return this;
        }

        private SonarAnalyzer.TextRange textRange_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder> textRangeBuilder_;
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public boolean hasTextRange() {
          return textRangeBuilder_ != null || textRange_ != null;
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public SonarAnalyzer.TextRange getTextRange() {
          if (textRangeBuilder_ == null) {
            return textRange_ == null ? SonarAnalyzer.TextRange.getDefaultInstance() : textRange_;
          } else {
            return textRangeBuilder_.getMessage();
          }
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public Builder setTextRange(SonarAnalyzer.TextRange value) {
          if (textRangeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            textRange_ = value;
            onChanged();
          } else {
            textRangeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public Builder setTextRange(
            SonarAnalyzer.TextRange.Builder builderForValue) {
          if (textRangeBuilder_ == null) {
            textRange_ = builderForValue.build();
            onChanged();
          } else {
            textRangeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public Builder mergeTextRange(SonarAnalyzer.TextRange value) {
          if (textRangeBuilder_ == null) {
            if (textRange_ != null) {
              textRange_ =
                SonarAnalyzer.TextRange.newBuilder(textRange_).mergeFrom(value).buildPartial();
            } else {
              textRange_ = value;
            }
            onChanged();
          } else {
            textRangeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public Builder clearTextRange() {
          if (textRangeBuilder_ == null) {
            textRange_ = null;
            onChanged();
          } else {
            textRange_ = null;
            textRangeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public SonarAnalyzer.TextRange.Builder getTextRangeBuilder() {
          
          onChanged();
          return getTextRangeFieldBuilder().getBuilder();
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public SonarAnalyzer.TextRangeOrBuilder getTextRangeOrBuilder() {
          if (textRangeBuilder_ != null) {
            return textRangeBuilder_.getMessageOrBuilder();
          } else {
            return textRange_ == null ?
                SonarAnalyzer.TextRange.getDefaultInstance() : textRange_;
          }
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder>
            getTextRangeFieldBuilder() {
          if (textRangeBuilder_ == null) {
            textRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder>(
                    getTextRange(),
                    getParentForChildren(),
                    isClean());
            textRange_ = null;
          }
          return textRangeBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:sonaranalyzer.TokenTypeInfo.TokenInfo)
      }

      // @@protoc_insertion_point(class_scope:sonaranalyzer.TokenTypeInfo.TokenInfo)
      private static final SonarAnalyzer.TokenTypeInfo.TokenInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SonarAnalyzer.TokenTypeInfo.TokenInfo();
      }

      public static SonarAnalyzer.TokenTypeInfo.TokenInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TokenInfo>
          PARSER = new com.google.protobuf.AbstractParser<TokenInfo>() {
        public TokenInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new TokenInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TokenInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TokenInfo> getParserForType() {
        return PARSER;
      }

      public SonarAnalyzer.TokenTypeInfo.TokenInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int FILE_PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object filePath_;
    /**
     * <code>string file_path = 1;</code>
     */
    public java.lang.String getFilePath() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filePath_ = s;
        return s;
      }
    }
    /**
     * <code>string file_path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFilePathBytes() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKEN_INFO_FIELD_NUMBER = 2;
    private java.util.List<SonarAnalyzer.TokenTypeInfo.TokenInfo> tokenInfo_;
    /**
     * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
     */
    public java.util.List<SonarAnalyzer.TokenTypeInfo.TokenInfo> getTokenInfoList() {
      return tokenInfo_;
    }
    /**
     * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
     */
    public java.util.List<? extends SonarAnalyzer.TokenTypeInfo.TokenInfoOrBuilder>
        getTokenInfoOrBuilderList() {
      return tokenInfo_;
    }
    /**
     * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
     */
    public int getTokenInfoCount() {
      return tokenInfo_.size();
    }
    /**
     * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
     */
    public SonarAnalyzer.TokenTypeInfo.TokenInfo getTokenInfo(int index) {
      return tokenInfo_.get(index);
    }
    /**
     * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
     */
    public SonarAnalyzer.TokenTypeInfo.TokenInfoOrBuilder getTokenInfoOrBuilder(
        int index) {
      return tokenInfo_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFilePathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, filePath_);
      }
      for (int i = 0; i < tokenInfo_.size(); i++) {
        output.writeMessage(2, tokenInfo_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFilePathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, filePath_);
      }
      for (int i = 0; i < tokenInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tokenInfo_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SonarAnalyzer.TokenTypeInfo)) {
        return super.equals(obj);
      }
      SonarAnalyzer.TokenTypeInfo other = (SonarAnalyzer.TokenTypeInfo) obj;

      boolean result = true;
      result = result && getFilePath()
          .equals(other.getFilePath());
      result = result && getTokenInfoList()
          .equals(other.getTokenInfoList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FILE_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getFilePath().hashCode();
      if (getTokenInfoCount() > 0) {
        hash = (37 * hash) + TOKEN_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getTokenInfoList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SonarAnalyzer.TokenTypeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.TokenTypeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.TokenTypeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.TokenTypeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.TokenTypeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.TokenTypeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.TokenTypeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.TokenTypeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.TokenTypeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.TokenTypeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SonarAnalyzer.TokenTypeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used for code coloring
     * </pre>
     *
     * Protobuf type {@code sonaranalyzer.TokenTypeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sonaranalyzer.TokenTypeInfo)
        SonarAnalyzer.TokenTypeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SonarAnalyzer.internal_static_sonaranalyzer_TokenTypeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SonarAnalyzer.internal_static_sonaranalyzer_TokenTypeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SonarAnalyzer.TokenTypeInfo.class, SonarAnalyzer.TokenTypeInfo.Builder.class);
      }

      // Construct using org.sonarsource.dotnet.protobuf.SonarAnalyzer.TokenTypeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTokenInfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        filePath_ = "";

        if (tokenInfoBuilder_ == null) {
          tokenInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          tokenInfoBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SonarAnalyzer.internal_static_sonaranalyzer_TokenTypeInfo_descriptor;
      }

      public SonarAnalyzer.TokenTypeInfo getDefaultInstanceForType() {
        return SonarAnalyzer.TokenTypeInfo.getDefaultInstance();
      }

      public SonarAnalyzer.TokenTypeInfo build() {
        SonarAnalyzer.TokenTypeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SonarAnalyzer.TokenTypeInfo buildPartial() {
        SonarAnalyzer.TokenTypeInfo result = new SonarAnalyzer.TokenTypeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.filePath_ = filePath_;
        if (tokenInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            tokenInfo_ = java.util.Collections.unmodifiableList(tokenInfo_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tokenInfo_ = tokenInfo_;
        } else {
          result.tokenInfo_ = tokenInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SonarAnalyzer.TokenTypeInfo) {
          return mergeFrom((SonarAnalyzer.TokenTypeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SonarAnalyzer.TokenTypeInfo other) {
        if (other == SonarAnalyzer.TokenTypeInfo.getDefaultInstance()) return this;
        if (!other.getFilePath().isEmpty()) {
          filePath_ = other.filePath_;
          onChanged();
        }
        if (tokenInfoBuilder_ == null) {
          if (!other.tokenInfo_.isEmpty()) {
            if (tokenInfo_.isEmpty()) {
              tokenInfo_ = other.tokenInfo_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTokenInfoIsMutable();
              tokenInfo_.addAll(other.tokenInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.tokenInfo_.isEmpty()) {
            if (tokenInfoBuilder_.isEmpty()) {
              tokenInfoBuilder_.dispose();
              tokenInfoBuilder_ = null;
              tokenInfo_ = other.tokenInfo_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tokenInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTokenInfoFieldBuilder() : null;
            } else {
              tokenInfoBuilder_.addAllMessages(other.tokenInfo_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SonarAnalyzer.TokenTypeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SonarAnalyzer.TokenTypeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object filePath_ = "";
      /**
       * <code>string file_path = 1;</code>
       */
      public java.lang.String getFilePath() {
        java.lang.Object ref = filePath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filePath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFilePathBytes() {
        java.lang.Object ref = filePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder setFilePath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder clearFilePath() {
        
        filePath_ = getDefaultInstance().getFilePath();
        onChanged();
        return this;
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder setFilePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filePath_ = value;
        onChanged();
        return this;
      }

      private java.util.List<SonarAnalyzer.TokenTypeInfo.TokenInfo> tokenInfo_ =
        java.util.Collections.emptyList();
      private void ensureTokenInfoIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          tokenInfo_ = new java.util.ArrayList<SonarAnalyzer.TokenTypeInfo.TokenInfo>(tokenInfo_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SonarAnalyzer.TokenTypeInfo.TokenInfo, SonarAnalyzer.TokenTypeInfo.TokenInfo.Builder, SonarAnalyzer.TokenTypeInfo.TokenInfoOrBuilder> tokenInfoBuilder_;

      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public java.util.List<SonarAnalyzer.TokenTypeInfo.TokenInfo> getTokenInfoList() {
        if (tokenInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tokenInfo_);
        } else {
          return tokenInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public int getTokenInfoCount() {
        if (tokenInfoBuilder_ == null) {
          return tokenInfo_.size();
        } else {
          return tokenInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public SonarAnalyzer.TokenTypeInfo.TokenInfo getTokenInfo(int index) {
        if (tokenInfoBuilder_ == null) {
          return tokenInfo_.get(index);
        } else {
          return tokenInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public Builder setTokenInfo(
          int index, SonarAnalyzer.TokenTypeInfo.TokenInfo value) {
        if (tokenInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTokenInfoIsMutable();
          tokenInfo_.set(index, value);
          onChanged();
        } else {
          tokenInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public Builder setTokenInfo(
          int index, SonarAnalyzer.TokenTypeInfo.TokenInfo.Builder builderForValue) {
        if (tokenInfoBuilder_ == null) {
          ensureTokenInfoIsMutable();
          tokenInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          tokenInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public Builder addTokenInfo(SonarAnalyzer.TokenTypeInfo.TokenInfo value) {
        if (tokenInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTokenInfoIsMutable();
          tokenInfo_.add(value);
          onChanged();
        } else {
          tokenInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public Builder addTokenInfo(
          int index, SonarAnalyzer.TokenTypeInfo.TokenInfo value) {
        if (tokenInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTokenInfoIsMutable();
          tokenInfo_.add(index, value);
          onChanged();
        } else {
          tokenInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public Builder addTokenInfo(
          SonarAnalyzer.TokenTypeInfo.TokenInfo.Builder builderForValue) {
        if (tokenInfoBuilder_ == null) {
          ensureTokenInfoIsMutable();
          tokenInfo_.add(builderForValue.build());
          onChanged();
        } else {
          tokenInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public Builder addTokenInfo(
          int index, SonarAnalyzer.TokenTypeInfo.TokenInfo.Builder builderForValue) {
        if (tokenInfoBuilder_ == null) {
          ensureTokenInfoIsMutable();
          tokenInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          tokenInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public Builder addAllTokenInfo(
          java.lang.Iterable<? extends SonarAnalyzer.TokenTypeInfo.TokenInfo> values) {
        if (tokenInfoBuilder_ == null) {
          ensureTokenInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tokenInfo_);
          onChanged();
        } else {
          tokenInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public Builder clearTokenInfo() {
        if (tokenInfoBuilder_ == null) {
          tokenInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tokenInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public Builder removeTokenInfo(int index) {
        if (tokenInfoBuilder_ == null) {
          ensureTokenInfoIsMutable();
          tokenInfo_.remove(index);
          onChanged();
        } else {
          tokenInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public SonarAnalyzer.TokenTypeInfo.TokenInfo.Builder getTokenInfoBuilder(
          int index) {
        return getTokenInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public SonarAnalyzer.TokenTypeInfo.TokenInfoOrBuilder getTokenInfoOrBuilder(
          int index) {
        if (tokenInfoBuilder_ == null) {
          return tokenInfo_.get(index);  } else {
          return tokenInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public java.util.List<? extends SonarAnalyzer.TokenTypeInfo.TokenInfoOrBuilder>
           getTokenInfoOrBuilderList() {
        if (tokenInfoBuilder_ != null) {
          return tokenInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tokenInfo_);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public SonarAnalyzer.TokenTypeInfo.TokenInfo.Builder addTokenInfoBuilder() {
        return getTokenInfoFieldBuilder().addBuilder(
            SonarAnalyzer.TokenTypeInfo.TokenInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public SonarAnalyzer.TokenTypeInfo.TokenInfo.Builder addTokenInfoBuilder(
          int index) {
        return getTokenInfoFieldBuilder().addBuilder(
            index, SonarAnalyzer.TokenTypeInfo.TokenInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .sonaranalyzer.TokenTypeInfo.TokenInfo token_info = 2;</code>
       */
      public java.util.List<SonarAnalyzer.TokenTypeInfo.TokenInfo.Builder>
           getTokenInfoBuilderList() {
        return getTokenInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SonarAnalyzer.TokenTypeInfo.TokenInfo, SonarAnalyzer.TokenTypeInfo.TokenInfo.Builder, SonarAnalyzer.TokenTypeInfo.TokenInfoOrBuilder>
          getTokenInfoFieldBuilder() {
        if (tokenInfoBuilder_ == null) {
          tokenInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SonarAnalyzer.TokenTypeInfo.TokenInfo, SonarAnalyzer.TokenTypeInfo.TokenInfo.Builder, SonarAnalyzer.TokenTypeInfo.TokenInfoOrBuilder>(
                  tokenInfo_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          tokenInfo_ = null;
        }
        return tokenInfoBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:sonaranalyzer.TokenTypeInfo)
    }

    // @@protoc_insertion_point(class_scope:sonaranalyzer.TokenTypeInfo)
    private static final SonarAnalyzer.TokenTypeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SonarAnalyzer.TokenTypeInfo();
    }

    public static SonarAnalyzer.TokenTypeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TokenTypeInfo>
        PARSER = new com.google.protobuf.AbstractParser<TokenTypeInfo>() {
      public TokenTypeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TokenTypeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TokenTypeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TokenTypeInfo> getParserForType() {
      return PARSER;
    }

    public SonarAnalyzer.TokenTypeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SymbolReferenceInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sonaranalyzer.SymbolReferenceInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string file_path = 1;</code>
     */
    java.lang.String getFilePath();
    /**
     * <code>string file_path = 1;</code>
     */
    com.google.protobuf.ByteString
        getFilePathBytes();

    /**
     * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
     */
    java.util.List<SonarAnalyzer.SymbolReferenceInfo.SymbolReference>
        getReferenceList();
    /**
     * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
     */
    SonarAnalyzer.SymbolReferenceInfo.SymbolReference getReference(int index);
    /**
     * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
     */
    int getReferenceCount();
    /**
     * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
     */
    java.util.List<? extends SonarAnalyzer.SymbolReferenceInfo.SymbolReferenceOrBuilder>
        getReferenceOrBuilderList();
    /**
     * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
     */
    SonarAnalyzer.SymbolReferenceInfo.SymbolReferenceOrBuilder getReferenceOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Used for symbol reference highlighting
   * </pre>
   *
   * Protobuf type {@code sonaranalyzer.SymbolReferenceInfo}
   */
  public  static final class SymbolReferenceInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sonaranalyzer.SymbolReferenceInfo)
      SymbolReferenceInfoOrBuilder {
    // Use SymbolReferenceInfo.newBuilder() to construct.
    private SymbolReferenceInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SymbolReferenceInfo() {
      filePath_ = "";
      reference_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SymbolReferenceInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              filePath_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                reference_ = new java.util.ArrayList<SonarAnalyzer.SymbolReferenceInfo.SymbolReference>();
                mutable_bitField0_ |= 0x00000002;
              }
              reference_.add(
                  input.readMessage(SonarAnalyzer.SymbolReferenceInfo.SymbolReference.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          reference_ = java.util.Collections.unmodifiableList(reference_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SonarAnalyzer.internal_static_sonaranalyzer_SymbolReferenceInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SonarAnalyzer.internal_static_sonaranalyzer_SymbolReferenceInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SonarAnalyzer.SymbolReferenceInfo.class, SonarAnalyzer.SymbolReferenceInfo.Builder.class);
    }

    public interface SymbolReferenceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:sonaranalyzer.SymbolReferenceInfo.SymbolReference)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.sonaranalyzer.TextRange declaration = 1;</code>
       */
      boolean hasDeclaration();
      /**
       * <code>.sonaranalyzer.TextRange declaration = 1;</code>
       */
      SonarAnalyzer.TextRange getDeclaration();
      /**
       * <code>.sonaranalyzer.TextRange declaration = 1;</code>
       */
      SonarAnalyzer.TextRangeOrBuilder getDeclarationOrBuilder();

      /**
       * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
       */
      java.util.List<SonarAnalyzer.TextRange>
          getReferenceList();
      /**
       * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
       */
      SonarAnalyzer.TextRange getReference(int index);
      /**
       * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
       */
      int getReferenceCount();
      /**
       * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
       */
      java.util.List<? extends SonarAnalyzer.TextRangeOrBuilder>
          getReferenceOrBuilderList();
      /**
       * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
       */
      SonarAnalyzer.TextRangeOrBuilder getReferenceOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code sonaranalyzer.SymbolReferenceInfo.SymbolReference}
     */
    public  static final class SymbolReference extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:sonaranalyzer.SymbolReferenceInfo.SymbolReference)
        SymbolReferenceOrBuilder {
      // Use SymbolReference.newBuilder() to construct.
      private SymbolReference(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SymbolReference() {
        reference_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private SymbolReference(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                SonarAnalyzer.TextRange.Builder subBuilder = null;
                if (declaration_ != null) {
                  subBuilder = declaration_.toBuilder();
                }
                declaration_ = input.readMessage(SonarAnalyzer.TextRange.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(declaration_);
                  declaration_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  reference_ = new java.util.ArrayList<SonarAnalyzer.TextRange>();
                  mutable_bitField0_ |= 0x00000002;
                }
                reference_.add(
                    input.readMessage(SonarAnalyzer.TextRange.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            reference_ = java.util.Collections.unmodifiableList(reference_);
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SonarAnalyzer.internal_static_sonaranalyzer_SymbolReferenceInfo_SymbolReference_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SonarAnalyzer.internal_static_sonaranalyzer_SymbolReferenceInfo_SymbolReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SonarAnalyzer.SymbolReferenceInfo.SymbolReference.class, SonarAnalyzer.SymbolReferenceInfo.SymbolReference.Builder.class);
      }

      private int bitField0_;
      public static final int DECLARATION_FIELD_NUMBER = 1;
      private SonarAnalyzer.TextRange declaration_;
      /**
       * <code>.sonaranalyzer.TextRange declaration = 1;</code>
       */
      public boolean hasDeclaration() {
        return declaration_ != null;
      }
      /**
       * <code>.sonaranalyzer.TextRange declaration = 1;</code>
       */
      public SonarAnalyzer.TextRange getDeclaration() {
        return declaration_ == null ? SonarAnalyzer.TextRange.getDefaultInstance() : declaration_;
      }
      /**
       * <code>.sonaranalyzer.TextRange declaration = 1;</code>
       */
      public SonarAnalyzer.TextRangeOrBuilder getDeclarationOrBuilder() {
        return getDeclaration();
      }

      public static final int REFERENCE_FIELD_NUMBER = 2;
      private java.util.List<SonarAnalyzer.TextRange> reference_;
      /**
       * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
       */
      public java.util.List<SonarAnalyzer.TextRange> getReferenceList() {
        return reference_;
      }
      /**
       * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
       */
      public java.util.List<? extends SonarAnalyzer.TextRangeOrBuilder>
          getReferenceOrBuilderList() {
        return reference_;
      }
      /**
       * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
       */
      public int getReferenceCount() {
        return reference_.size();
      }
      /**
       * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
       */
      public SonarAnalyzer.TextRange getReference(int index) {
        return reference_.get(index);
      }
      /**
       * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
       */
      public SonarAnalyzer.TextRangeOrBuilder getReferenceOrBuilder(
          int index) {
        return reference_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (declaration_ != null) {
          output.writeMessage(1, getDeclaration());
        }
        for (int i = 0; i < reference_.size(); i++) {
          output.writeMessage(2, reference_.get(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (declaration_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getDeclaration());
        }
        for (int i = 0; i < reference_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, reference_.get(i));
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SonarAnalyzer.SymbolReferenceInfo.SymbolReference)) {
          return super.equals(obj);
        }
        SonarAnalyzer.SymbolReferenceInfo.SymbolReference other = (SonarAnalyzer.SymbolReferenceInfo.SymbolReference) obj;

        boolean result = true;
        result = result && (hasDeclaration() == other.hasDeclaration());
        if (hasDeclaration()) {
          result = result && getDeclaration()
              .equals(other.getDeclaration());
        }
        result = result && getReferenceList()
            .equals(other.getReferenceList());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDeclaration()) {
          hash = (37 * hash) + DECLARATION_FIELD_NUMBER;
          hash = (53 * hash) + getDeclaration().hashCode();
        }
        if (getReferenceCount() > 0) {
          hash = (37 * hash) + REFERENCE_FIELD_NUMBER;
          hash = (53 * hash) + getReferenceList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SonarAnalyzer.SymbolReferenceInfo.SymbolReference parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SonarAnalyzer.SymbolReferenceInfo.SymbolReference parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SonarAnalyzer.SymbolReferenceInfo.SymbolReference parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SonarAnalyzer.SymbolReferenceInfo.SymbolReference parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SonarAnalyzer.SymbolReferenceInfo.SymbolReference parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SonarAnalyzer.SymbolReferenceInfo.SymbolReference parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SonarAnalyzer.SymbolReferenceInfo.SymbolReference parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SonarAnalyzer.SymbolReferenceInfo.SymbolReference parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SonarAnalyzer.SymbolReferenceInfo.SymbolReference parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SonarAnalyzer.SymbolReferenceInfo.SymbolReference parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SonarAnalyzer.SymbolReferenceInfo.SymbolReference prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code sonaranalyzer.SymbolReferenceInfo.SymbolReference}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:sonaranalyzer.SymbolReferenceInfo.SymbolReference)
          SonarAnalyzer.SymbolReferenceInfo.SymbolReferenceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SonarAnalyzer.internal_static_sonaranalyzer_SymbolReferenceInfo_SymbolReference_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SonarAnalyzer.internal_static_sonaranalyzer_SymbolReferenceInfo_SymbolReference_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SonarAnalyzer.SymbolReferenceInfo.SymbolReference.class, SonarAnalyzer.SymbolReferenceInfo.SymbolReference.Builder.class);
        }

        // Construct using org.sonarsource.dotnet.protobuf.SonarAnalyzer.SymbolReferenceInfo.SymbolReference.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getReferenceFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (declarationBuilder_ == null) {
            declaration_ = null;
          } else {
            declaration_ = null;
            declarationBuilder_ = null;
          }
          if (referenceBuilder_ == null) {
            reference_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            referenceBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SonarAnalyzer.internal_static_sonaranalyzer_SymbolReferenceInfo_SymbolReference_descriptor;
        }

        public SonarAnalyzer.SymbolReferenceInfo.SymbolReference getDefaultInstanceForType() {
          return SonarAnalyzer.SymbolReferenceInfo.SymbolReference.getDefaultInstance();
        }

        public SonarAnalyzer.SymbolReferenceInfo.SymbolReference build() {
          SonarAnalyzer.SymbolReferenceInfo.SymbolReference result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SonarAnalyzer.SymbolReferenceInfo.SymbolReference buildPartial() {
          SonarAnalyzer.SymbolReferenceInfo.SymbolReference result = new SonarAnalyzer.SymbolReferenceInfo.SymbolReference(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (declarationBuilder_ == null) {
            result.declaration_ = declaration_;
          } else {
            result.declaration_ = declarationBuilder_.build();
          }
          if (referenceBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              reference_ = java.util.Collections.unmodifiableList(reference_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.reference_ = reference_;
          } else {
            result.reference_ = referenceBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SonarAnalyzer.SymbolReferenceInfo.SymbolReference) {
            return mergeFrom((SonarAnalyzer.SymbolReferenceInfo.SymbolReference)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SonarAnalyzer.SymbolReferenceInfo.SymbolReference other) {
          if (other == SonarAnalyzer.SymbolReferenceInfo.SymbolReference.getDefaultInstance()) return this;
          if (other.hasDeclaration()) {
            mergeDeclaration(other.getDeclaration());
          }
          if (referenceBuilder_ == null) {
            if (!other.reference_.isEmpty()) {
              if (reference_.isEmpty()) {
                reference_ = other.reference_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureReferenceIsMutable();
                reference_.addAll(other.reference_);
              }
              onChanged();
            }
          } else {
            if (!other.reference_.isEmpty()) {
              if (referenceBuilder_.isEmpty()) {
                referenceBuilder_.dispose();
                referenceBuilder_ = null;
                reference_ = other.reference_;
                bitField0_ = (bitField0_ & ~0x00000002);
                referenceBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getReferenceFieldBuilder() : null;
              } else {
                referenceBuilder_.addAllMessages(other.reference_);
              }
            }
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SonarAnalyzer.SymbolReferenceInfo.SymbolReference parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SonarAnalyzer.SymbolReferenceInfo.SymbolReference) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private SonarAnalyzer.TextRange declaration_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder> declarationBuilder_;
        /**
         * <code>.sonaranalyzer.TextRange declaration = 1;</code>
         */
        public boolean hasDeclaration() {
          return declarationBuilder_ != null || declaration_ != null;
        }
        /**
         * <code>.sonaranalyzer.TextRange declaration = 1;</code>
         */
        public SonarAnalyzer.TextRange getDeclaration() {
          if (declarationBuilder_ == null) {
            return declaration_ == null ? SonarAnalyzer.TextRange.getDefaultInstance() : declaration_;
          } else {
            return declarationBuilder_.getMessage();
          }
        }
        /**
         * <code>.sonaranalyzer.TextRange declaration = 1;</code>
         */
        public Builder setDeclaration(SonarAnalyzer.TextRange value) {
          if (declarationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            declaration_ = value;
            onChanged();
          } else {
            declarationBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange declaration = 1;</code>
         */
        public Builder setDeclaration(
            SonarAnalyzer.TextRange.Builder builderForValue) {
          if (declarationBuilder_ == null) {
            declaration_ = builderForValue.build();
            onChanged();
          } else {
            declarationBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange declaration = 1;</code>
         */
        public Builder mergeDeclaration(SonarAnalyzer.TextRange value) {
          if (declarationBuilder_ == null) {
            if (declaration_ != null) {
              declaration_ =
                SonarAnalyzer.TextRange.newBuilder(declaration_).mergeFrom(value).buildPartial();
            } else {
              declaration_ = value;
            }
            onChanged();
          } else {
            declarationBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange declaration = 1;</code>
         */
        public Builder clearDeclaration() {
          if (declarationBuilder_ == null) {
            declaration_ = null;
            onChanged();
          } else {
            declaration_ = null;
            declarationBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange declaration = 1;</code>
         */
        public SonarAnalyzer.TextRange.Builder getDeclarationBuilder() {
          
          onChanged();
          return getDeclarationFieldBuilder().getBuilder();
        }
        /**
         * <code>.sonaranalyzer.TextRange declaration = 1;</code>
         */
        public SonarAnalyzer.TextRangeOrBuilder getDeclarationOrBuilder() {
          if (declarationBuilder_ != null) {
            return declarationBuilder_.getMessageOrBuilder();
          } else {
            return declaration_ == null ?
                SonarAnalyzer.TextRange.getDefaultInstance() : declaration_;
          }
        }
        /**
         * <code>.sonaranalyzer.TextRange declaration = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder>
            getDeclarationFieldBuilder() {
          if (declarationBuilder_ == null) {
            declarationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder>(
                    getDeclaration(),
                    getParentForChildren(),
                    isClean());
            declaration_ = null;
          }
          return declarationBuilder_;
        }

        private java.util.List<SonarAnalyzer.TextRange> reference_ =
          java.util.Collections.emptyList();
        private void ensureReferenceIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            reference_ = new java.util.ArrayList<SonarAnalyzer.TextRange>(reference_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder> referenceBuilder_;

        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public java.util.List<SonarAnalyzer.TextRange> getReferenceList() {
          if (referenceBuilder_ == null) {
            return java.util.Collections.unmodifiableList(reference_);
          } else {
            return referenceBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public int getReferenceCount() {
          if (referenceBuilder_ == null) {
            return reference_.size();
          } else {
            return referenceBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public SonarAnalyzer.TextRange getReference(int index) {
          if (referenceBuilder_ == null) {
            return reference_.get(index);
          } else {
            return referenceBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public Builder setReference(
            int index, SonarAnalyzer.TextRange value) {
          if (referenceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureReferenceIsMutable();
            reference_.set(index, value);
            onChanged();
          } else {
            referenceBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public Builder setReference(
            int index, SonarAnalyzer.TextRange.Builder builderForValue) {
          if (referenceBuilder_ == null) {
            ensureReferenceIsMutable();
            reference_.set(index, builderForValue.build());
            onChanged();
          } else {
            referenceBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public Builder addReference(SonarAnalyzer.TextRange value) {
          if (referenceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureReferenceIsMutable();
            reference_.add(value);
            onChanged();
          } else {
            referenceBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public Builder addReference(
            int index, SonarAnalyzer.TextRange value) {
          if (referenceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureReferenceIsMutable();
            reference_.add(index, value);
            onChanged();
          } else {
            referenceBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public Builder addReference(
            SonarAnalyzer.TextRange.Builder builderForValue) {
          if (referenceBuilder_ == null) {
            ensureReferenceIsMutable();
            reference_.add(builderForValue.build());
            onChanged();
          } else {
            referenceBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public Builder addReference(
            int index, SonarAnalyzer.TextRange.Builder builderForValue) {
          if (referenceBuilder_ == null) {
            ensureReferenceIsMutable();
            reference_.add(index, builderForValue.build());
            onChanged();
          } else {
            referenceBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public Builder addAllReference(
            java.lang.Iterable<? extends SonarAnalyzer.TextRange> values) {
          if (referenceBuilder_ == null) {
            ensureReferenceIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, reference_);
            onChanged();
          } else {
            referenceBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public Builder clearReference() {
          if (referenceBuilder_ == null) {
            reference_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            referenceBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public Builder removeReference(int index) {
          if (referenceBuilder_ == null) {
            ensureReferenceIsMutable();
            reference_.remove(index);
            onChanged();
          } else {
            referenceBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public SonarAnalyzer.TextRange.Builder getReferenceBuilder(
            int index) {
          return getReferenceFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public SonarAnalyzer.TextRangeOrBuilder getReferenceOrBuilder(
            int index) {
          if (referenceBuilder_ == null) {
            return reference_.get(index);  } else {
            return referenceBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public java.util.List<? extends SonarAnalyzer.TextRangeOrBuilder>
             getReferenceOrBuilderList() {
          if (referenceBuilder_ != null) {
            return referenceBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(reference_);
          }
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public SonarAnalyzer.TextRange.Builder addReferenceBuilder() {
          return getReferenceFieldBuilder().addBuilder(
              SonarAnalyzer.TextRange.getDefaultInstance());
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public SonarAnalyzer.TextRange.Builder addReferenceBuilder(
            int index) {
          return getReferenceFieldBuilder().addBuilder(
              index, SonarAnalyzer.TextRange.getDefaultInstance());
        }
        /**
         * <code>repeated .sonaranalyzer.TextRange reference = 2;</code>
         */
        public java.util.List<SonarAnalyzer.TextRange.Builder>
             getReferenceBuilderList() {
          return getReferenceFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder>
            getReferenceFieldBuilder() {
          if (referenceBuilder_ == null) {
            referenceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder>(
                    reference_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            reference_ = null;
          }
          return referenceBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:sonaranalyzer.SymbolReferenceInfo.SymbolReference)
      }

      // @@protoc_insertion_point(class_scope:sonaranalyzer.SymbolReferenceInfo.SymbolReference)
      private static final SonarAnalyzer.SymbolReferenceInfo.SymbolReference DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SonarAnalyzer.SymbolReferenceInfo.SymbolReference();
      }

      public static SonarAnalyzer.SymbolReferenceInfo.SymbolReference getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SymbolReference>
          PARSER = new com.google.protobuf.AbstractParser<SymbolReference>() {
        public SymbolReference parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new SymbolReference(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SymbolReference> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SymbolReference> getParserForType() {
        return PARSER;
      }

      public SonarAnalyzer.SymbolReferenceInfo.SymbolReference getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int FILE_PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object filePath_;
    /**
     * <code>string file_path = 1;</code>
     */
    public java.lang.String getFilePath() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filePath_ = s;
        return s;
      }
    }
    /**
     * <code>string file_path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFilePathBytes() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REFERENCE_FIELD_NUMBER = 2;
    private java.util.List<SonarAnalyzer.SymbolReferenceInfo.SymbolReference> reference_;
    /**
     * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
     */
    public java.util.List<SonarAnalyzer.SymbolReferenceInfo.SymbolReference> getReferenceList() {
      return reference_;
    }
    /**
     * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
     */
    public java.util.List<? extends SonarAnalyzer.SymbolReferenceInfo.SymbolReferenceOrBuilder>
        getReferenceOrBuilderList() {
      return reference_;
    }
    /**
     * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
     */
    public int getReferenceCount() {
      return reference_.size();
    }
    /**
     * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
     */
    public SonarAnalyzer.SymbolReferenceInfo.SymbolReference getReference(int index) {
      return reference_.get(index);
    }
    /**
     * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
     */
    public SonarAnalyzer.SymbolReferenceInfo.SymbolReferenceOrBuilder getReferenceOrBuilder(
        int index) {
      return reference_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFilePathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, filePath_);
      }
      for (int i = 0; i < reference_.size(); i++) {
        output.writeMessage(2, reference_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFilePathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, filePath_);
      }
      for (int i = 0; i < reference_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, reference_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SonarAnalyzer.SymbolReferenceInfo)) {
        return super.equals(obj);
      }
      SonarAnalyzer.SymbolReferenceInfo other = (SonarAnalyzer.SymbolReferenceInfo) obj;

      boolean result = true;
      result = result && getFilePath()
          .equals(other.getFilePath());
      result = result && getReferenceList()
          .equals(other.getReferenceList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FILE_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getFilePath().hashCode();
      if (getReferenceCount() > 0) {
        hash = (37 * hash) + REFERENCE_FIELD_NUMBER;
        hash = (53 * hash) + getReferenceList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SonarAnalyzer.SymbolReferenceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.SymbolReferenceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.SymbolReferenceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.SymbolReferenceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.SymbolReferenceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.SymbolReferenceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.SymbolReferenceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.SymbolReferenceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.SymbolReferenceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.SymbolReferenceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SonarAnalyzer.SymbolReferenceInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used for symbol reference highlighting
     * </pre>
     *
     * Protobuf type {@code sonaranalyzer.SymbolReferenceInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sonaranalyzer.SymbolReferenceInfo)
        SonarAnalyzer.SymbolReferenceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SonarAnalyzer.internal_static_sonaranalyzer_SymbolReferenceInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SonarAnalyzer.internal_static_sonaranalyzer_SymbolReferenceInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SonarAnalyzer.SymbolReferenceInfo.class, SonarAnalyzer.SymbolReferenceInfo.Builder.class);
      }

      // Construct using org.sonarsource.dotnet.protobuf.SonarAnalyzer.SymbolReferenceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getReferenceFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        filePath_ = "";

        if (referenceBuilder_ == null) {
          reference_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          referenceBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SonarAnalyzer.internal_static_sonaranalyzer_SymbolReferenceInfo_descriptor;
      }

      public SonarAnalyzer.SymbolReferenceInfo getDefaultInstanceForType() {
        return SonarAnalyzer.SymbolReferenceInfo.getDefaultInstance();
      }

      public SonarAnalyzer.SymbolReferenceInfo build() {
        SonarAnalyzer.SymbolReferenceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SonarAnalyzer.SymbolReferenceInfo buildPartial() {
        SonarAnalyzer.SymbolReferenceInfo result = new SonarAnalyzer.SymbolReferenceInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.filePath_ = filePath_;
        if (referenceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            reference_ = java.util.Collections.unmodifiableList(reference_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.reference_ = reference_;
        } else {
          result.reference_ = referenceBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SonarAnalyzer.SymbolReferenceInfo) {
          return mergeFrom((SonarAnalyzer.SymbolReferenceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SonarAnalyzer.SymbolReferenceInfo other) {
        if (other == SonarAnalyzer.SymbolReferenceInfo.getDefaultInstance()) return this;
        if (!other.getFilePath().isEmpty()) {
          filePath_ = other.filePath_;
          onChanged();
        }
        if (referenceBuilder_ == null) {
          if (!other.reference_.isEmpty()) {
            if (reference_.isEmpty()) {
              reference_ = other.reference_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureReferenceIsMutable();
              reference_.addAll(other.reference_);
            }
            onChanged();
          }
        } else {
          if (!other.reference_.isEmpty()) {
            if (referenceBuilder_.isEmpty()) {
              referenceBuilder_.dispose();
              referenceBuilder_ = null;
              reference_ = other.reference_;
              bitField0_ = (bitField0_ & ~0x00000002);
              referenceBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getReferenceFieldBuilder() : null;
            } else {
              referenceBuilder_.addAllMessages(other.reference_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SonarAnalyzer.SymbolReferenceInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SonarAnalyzer.SymbolReferenceInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object filePath_ = "";
      /**
       * <code>string file_path = 1;</code>
       */
      public java.lang.String getFilePath() {
        java.lang.Object ref = filePath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filePath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFilePathBytes() {
        java.lang.Object ref = filePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder setFilePath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder clearFilePath() {
        
        filePath_ = getDefaultInstance().getFilePath();
        onChanged();
        return this;
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder setFilePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filePath_ = value;
        onChanged();
        return this;
      }

      private java.util.List<SonarAnalyzer.SymbolReferenceInfo.SymbolReference> reference_ =
        java.util.Collections.emptyList();
      private void ensureReferenceIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          reference_ = new java.util.ArrayList<SonarAnalyzer.SymbolReferenceInfo.SymbolReference>(reference_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SonarAnalyzer.SymbolReferenceInfo.SymbolReference, SonarAnalyzer.SymbolReferenceInfo.SymbolReference.Builder, SonarAnalyzer.SymbolReferenceInfo.SymbolReferenceOrBuilder> referenceBuilder_;

      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public java.util.List<SonarAnalyzer.SymbolReferenceInfo.SymbolReference> getReferenceList() {
        if (referenceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(reference_);
        } else {
          return referenceBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public int getReferenceCount() {
        if (referenceBuilder_ == null) {
          return reference_.size();
        } else {
          return referenceBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public SonarAnalyzer.SymbolReferenceInfo.SymbolReference getReference(int index) {
        if (referenceBuilder_ == null) {
          return reference_.get(index);
        } else {
          return referenceBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public Builder setReference(
          int index, SonarAnalyzer.SymbolReferenceInfo.SymbolReference value) {
        if (referenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReferenceIsMutable();
          reference_.set(index, value);
          onChanged();
        } else {
          referenceBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public Builder setReference(
          int index, SonarAnalyzer.SymbolReferenceInfo.SymbolReference.Builder builderForValue) {
        if (referenceBuilder_ == null) {
          ensureReferenceIsMutable();
          reference_.set(index, builderForValue.build());
          onChanged();
        } else {
          referenceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public Builder addReference(SonarAnalyzer.SymbolReferenceInfo.SymbolReference value) {
        if (referenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReferenceIsMutable();
          reference_.add(value);
          onChanged();
        } else {
          referenceBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public Builder addReference(
          int index, SonarAnalyzer.SymbolReferenceInfo.SymbolReference value) {
        if (referenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReferenceIsMutable();
          reference_.add(index, value);
          onChanged();
        } else {
          referenceBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public Builder addReference(
          SonarAnalyzer.SymbolReferenceInfo.SymbolReference.Builder builderForValue) {
        if (referenceBuilder_ == null) {
          ensureReferenceIsMutable();
          reference_.add(builderForValue.build());
          onChanged();
        } else {
          referenceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public Builder addReference(
          int index, SonarAnalyzer.SymbolReferenceInfo.SymbolReference.Builder builderForValue) {
        if (referenceBuilder_ == null) {
          ensureReferenceIsMutable();
          reference_.add(index, builderForValue.build());
          onChanged();
        } else {
          referenceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public Builder addAllReference(
          java.lang.Iterable<? extends SonarAnalyzer.SymbolReferenceInfo.SymbolReference> values) {
        if (referenceBuilder_ == null) {
          ensureReferenceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, reference_);
          onChanged();
        } else {
          referenceBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public Builder clearReference() {
        if (referenceBuilder_ == null) {
          reference_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          referenceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public Builder removeReference(int index) {
        if (referenceBuilder_ == null) {
          ensureReferenceIsMutable();
          reference_.remove(index);
          onChanged();
        } else {
          referenceBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public SonarAnalyzer.SymbolReferenceInfo.SymbolReference.Builder getReferenceBuilder(
          int index) {
        return getReferenceFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public SonarAnalyzer.SymbolReferenceInfo.SymbolReferenceOrBuilder getReferenceOrBuilder(
          int index) {
        if (referenceBuilder_ == null) {
          return reference_.get(index);  } else {
          return referenceBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public java.util.List<? extends SonarAnalyzer.SymbolReferenceInfo.SymbolReferenceOrBuilder>
           getReferenceOrBuilderList() {
        if (referenceBuilder_ != null) {
          return referenceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(reference_);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public SonarAnalyzer.SymbolReferenceInfo.SymbolReference.Builder addReferenceBuilder() {
        return getReferenceFieldBuilder().addBuilder(
            SonarAnalyzer.SymbolReferenceInfo.SymbolReference.getDefaultInstance());
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public SonarAnalyzer.SymbolReferenceInfo.SymbolReference.Builder addReferenceBuilder(
          int index) {
        return getReferenceFieldBuilder().addBuilder(
            index, SonarAnalyzer.SymbolReferenceInfo.SymbolReference.getDefaultInstance());
      }
      /**
       * <code>repeated .sonaranalyzer.SymbolReferenceInfo.SymbolReference reference = 2;</code>
       */
      public java.util.List<SonarAnalyzer.SymbolReferenceInfo.SymbolReference.Builder>
           getReferenceBuilderList() {
        return getReferenceFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SonarAnalyzer.SymbolReferenceInfo.SymbolReference, SonarAnalyzer.SymbolReferenceInfo.SymbolReference.Builder, SonarAnalyzer.SymbolReferenceInfo.SymbolReferenceOrBuilder>
          getReferenceFieldBuilder() {
        if (referenceBuilder_ == null) {
          referenceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SonarAnalyzer.SymbolReferenceInfo.SymbolReference, SonarAnalyzer.SymbolReferenceInfo.SymbolReference.Builder, SonarAnalyzer.SymbolReferenceInfo.SymbolReferenceOrBuilder>(
                  reference_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          reference_ = null;
        }
        return referenceBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:sonaranalyzer.SymbolReferenceInfo)
    }

    // @@protoc_insertion_point(class_scope:sonaranalyzer.SymbolReferenceInfo)
    private static final SonarAnalyzer.SymbolReferenceInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SonarAnalyzer.SymbolReferenceInfo();
    }

    public static SonarAnalyzer.SymbolReferenceInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SymbolReferenceInfo>
        PARSER = new com.google.protobuf.AbstractParser<SymbolReferenceInfo>() {
      public SymbolReferenceInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SymbolReferenceInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SymbolReferenceInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SymbolReferenceInfo> getParserForType() {
      return PARSER;
    }

    public SonarAnalyzer.SymbolReferenceInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CopyPasteTokenInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sonaranalyzer.CopyPasteTokenInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string file_path = 1;</code>
     */
    java.lang.String getFilePath();
    /**
     * <code>string file_path = 1;</code>
     */
    com.google.protobuf.ByteString
        getFilePathBytes();

    /**
     * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
     */
    java.util.List<SonarAnalyzer.CopyPasteTokenInfo.TokenInfo>
        getTokenInfoList();
    /**
     * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
     */
    SonarAnalyzer.CopyPasteTokenInfo.TokenInfo getTokenInfo(int index);
    /**
     * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
     */
    int getTokenInfoCount();
    /**
     * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
     */
    java.util.List<? extends SonarAnalyzer.CopyPasteTokenInfo.TokenInfoOrBuilder>
        getTokenInfoOrBuilderList();
    /**
     * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
     */
    SonarAnalyzer.CopyPasteTokenInfo.TokenInfoOrBuilder getTokenInfoOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Used for copy-paste detection
   * </pre>
   *
   * Protobuf type {@code sonaranalyzer.CopyPasteTokenInfo}
   */
  public  static final class CopyPasteTokenInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sonaranalyzer.CopyPasteTokenInfo)
      CopyPasteTokenInfoOrBuilder {
    // Use CopyPasteTokenInfo.newBuilder() to construct.
    private CopyPasteTokenInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CopyPasteTokenInfo() {
      filePath_ = "";
      tokenInfo_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CopyPasteTokenInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              filePath_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                tokenInfo_ = new java.util.ArrayList<SonarAnalyzer.CopyPasteTokenInfo.TokenInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              tokenInfo_.add(
                  input.readMessage(SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          tokenInfo_ = java.util.Collections.unmodifiableList(tokenInfo_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SonarAnalyzer.internal_static_sonaranalyzer_CopyPasteTokenInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SonarAnalyzer.internal_static_sonaranalyzer_CopyPasteTokenInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SonarAnalyzer.CopyPasteTokenInfo.class, SonarAnalyzer.CopyPasteTokenInfo.Builder.class);
    }

    public interface TokenInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:sonaranalyzer.CopyPasteTokenInfo.TokenInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string token_value = 1;</code>
       */
      java.lang.String getTokenValue();
      /**
       * <code>string token_value = 1;</code>
       */
      com.google.protobuf.ByteString
          getTokenValueBytes();

      /**
       * <code>.sonaranalyzer.TextRange text_range = 2;</code>
       */
      boolean hasTextRange();
      /**
       * <code>.sonaranalyzer.TextRange text_range = 2;</code>
       */
      SonarAnalyzer.TextRange getTextRange();
      /**
       * <code>.sonaranalyzer.TextRange text_range = 2;</code>
       */
      SonarAnalyzer.TextRangeOrBuilder getTextRangeOrBuilder();
    }
    /**
     * Protobuf type {@code sonaranalyzer.CopyPasteTokenInfo.TokenInfo}
     */
    public  static final class TokenInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:sonaranalyzer.CopyPasteTokenInfo.TokenInfo)
        TokenInfoOrBuilder {
      // Use TokenInfo.newBuilder() to construct.
      private TokenInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TokenInfo() {
        tokenValue_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private TokenInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                tokenValue_ = s;
                break;
              }
              case 18: {
                SonarAnalyzer.TextRange.Builder subBuilder = null;
                if (textRange_ != null) {
                  subBuilder = textRange_.toBuilder();
                }
                textRange_ = input.readMessage(SonarAnalyzer.TextRange.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(textRange_);
                  textRange_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SonarAnalyzer.internal_static_sonaranalyzer_CopyPasteTokenInfo_TokenInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SonarAnalyzer.internal_static_sonaranalyzer_CopyPasteTokenInfo_TokenInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.class, SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.Builder.class);
      }

      public static final int TOKEN_VALUE_FIELD_NUMBER = 1;
      private volatile java.lang.Object tokenValue_;
      /**
       * <code>string token_value = 1;</code>
       */
      public java.lang.String getTokenValue() {
        java.lang.Object ref = tokenValue_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tokenValue_ = s;
          return s;
        }
      }
      /**
       * <code>string token_value = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTokenValueBytes() {
        java.lang.Object ref = tokenValue_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tokenValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEXT_RANGE_FIELD_NUMBER = 2;
      private SonarAnalyzer.TextRange textRange_;
      /**
       * <code>.sonaranalyzer.TextRange text_range = 2;</code>
       */
      public boolean hasTextRange() {
        return textRange_ != null;
      }
      /**
       * <code>.sonaranalyzer.TextRange text_range = 2;</code>
       */
      public SonarAnalyzer.TextRange getTextRange() {
        return textRange_ == null ? SonarAnalyzer.TextRange.getDefaultInstance() : textRange_;
      }
      /**
       * <code>.sonaranalyzer.TextRange text_range = 2;</code>
       */
      public SonarAnalyzer.TextRangeOrBuilder getTextRangeOrBuilder() {
        return getTextRange();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getTokenValueBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tokenValue_);
        }
        if (textRange_ != null) {
          output.writeMessage(2, getTextRange());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getTokenValueBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tokenValue_);
        }
        if (textRange_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getTextRange());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SonarAnalyzer.CopyPasteTokenInfo.TokenInfo)) {
          return super.equals(obj);
        }
        SonarAnalyzer.CopyPasteTokenInfo.TokenInfo other = (SonarAnalyzer.CopyPasteTokenInfo.TokenInfo) obj;

        boolean result = true;
        result = result && getTokenValue()
            .equals(other.getTokenValue());
        result = result && (hasTextRange() == other.hasTextRange());
        if (hasTextRange()) {
          result = result && getTextRange()
              .equals(other.getTextRange());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TOKEN_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getTokenValue().hashCode();
        if (hasTextRange()) {
          hash = (37 * hash) + TEXT_RANGE_FIELD_NUMBER;
          hash = (53 * hash) + getTextRange().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SonarAnalyzer.CopyPasteTokenInfo.TokenInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SonarAnalyzer.CopyPasteTokenInfo.TokenInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SonarAnalyzer.CopyPasteTokenInfo.TokenInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SonarAnalyzer.CopyPasteTokenInfo.TokenInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SonarAnalyzer.CopyPasteTokenInfo.TokenInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SonarAnalyzer.CopyPasteTokenInfo.TokenInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SonarAnalyzer.CopyPasteTokenInfo.TokenInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SonarAnalyzer.CopyPasteTokenInfo.TokenInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SonarAnalyzer.CopyPasteTokenInfo.TokenInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SonarAnalyzer.CopyPasteTokenInfo.TokenInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SonarAnalyzer.CopyPasteTokenInfo.TokenInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code sonaranalyzer.CopyPasteTokenInfo.TokenInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:sonaranalyzer.CopyPasteTokenInfo.TokenInfo)
          SonarAnalyzer.CopyPasteTokenInfo.TokenInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SonarAnalyzer.internal_static_sonaranalyzer_CopyPasteTokenInfo_TokenInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SonarAnalyzer.internal_static_sonaranalyzer_CopyPasteTokenInfo_TokenInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.class, SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.Builder.class);
        }

        // Construct using org.sonarsource.dotnet.protobuf.SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          tokenValue_ = "";

          if (textRangeBuilder_ == null) {
            textRange_ = null;
          } else {
            textRange_ = null;
            textRangeBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SonarAnalyzer.internal_static_sonaranalyzer_CopyPasteTokenInfo_TokenInfo_descriptor;
        }

        public SonarAnalyzer.CopyPasteTokenInfo.TokenInfo getDefaultInstanceForType() {
          return SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.getDefaultInstance();
        }

        public SonarAnalyzer.CopyPasteTokenInfo.TokenInfo build() {
          SonarAnalyzer.CopyPasteTokenInfo.TokenInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SonarAnalyzer.CopyPasteTokenInfo.TokenInfo buildPartial() {
          SonarAnalyzer.CopyPasteTokenInfo.TokenInfo result = new SonarAnalyzer.CopyPasteTokenInfo.TokenInfo(this);
          result.tokenValue_ = tokenValue_;
          if (textRangeBuilder_ == null) {
            result.textRange_ = textRange_;
          } else {
            result.textRange_ = textRangeBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SonarAnalyzer.CopyPasteTokenInfo.TokenInfo) {
            return mergeFrom((SonarAnalyzer.CopyPasteTokenInfo.TokenInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SonarAnalyzer.CopyPasteTokenInfo.TokenInfo other) {
          if (other == SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.getDefaultInstance()) return this;
          if (!other.getTokenValue().isEmpty()) {
            tokenValue_ = other.tokenValue_;
            onChanged();
          }
          if (other.hasTextRange()) {
            mergeTextRange(other.getTextRange());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SonarAnalyzer.CopyPasteTokenInfo.TokenInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SonarAnalyzer.CopyPasteTokenInfo.TokenInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object tokenValue_ = "";
        /**
         * <code>string token_value = 1;</code>
         */
        public java.lang.String getTokenValue() {
          java.lang.Object ref = tokenValue_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            tokenValue_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string token_value = 1;</code>
         */
        public com.google.protobuf.ByteString
            getTokenValueBytes() {
          java.lang.Object ref = tokenValue_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            tokenValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string token_value = 1;</code>
         */
        public Builder setTokenValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          tokenValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string token_value = 1;</code>
         */
        public Builder clearTokenValue() {
          
          tokenValue_ = getDefaultInstance().getTokenValue();
          onChanged();
          return this;
        }
        /**
         * <code>string token_value = 1;</code>
         */
        public Builder setTokenValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          tokenValue_ = value;
          onChanged();
          return this;
        }

        private SonarAnalyzer.TextRange textRange_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder> textRangeBuilder_;
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public boolean hasTextRange() {
          return textRangeBuilder_ != null || textRange_ != null;
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public SonarAnalyzer.TextRange getTextRange() {
          if (textRangeBuilder_ == null) {
            return textRange_ == null ? SonarAnalyzer.TextRange.getDefaultInstance() : textRange_;
          } else {
            return textRangeBuilder_.getMessage();
          }
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public Builder setTextRange(SonarAnalyzer.TextRange value) {
          if (textRangeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            textRange_ = value;
            onChanged();
          } else {
            textRangeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public Builder setTextRange(
            SonarAnalyzer.TextRange.Builder builderForValue) {
          if (textRangeBuilder_ == null) {
            textRange_ = builderForValue.build();
            onChanged();
          } else {
            textRangeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public Builder mergeTextRange(SonarAnalyzer.TextRange value) {
          if (textRangeBuilder_ == null) {
            if (textRange_ != null) {
              textRange_ =
                SonarAnalyzer.TextRange.newBuilder(textRange_).mergeFrom(value).buildPartial();
            } else {
              textRange_ = value;
            }
            onChanged();
          } else {
            textRangeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public Builder clearTextRange() {
          if (textRangeBuilder_ == null) {
            textRange_ = null;
            onChanged();
          } else {
            textRange_ = null;
            textRangeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public SonarAnalyzer.TextRange.Builder getTextRangeBuilder() {
          
          onChanged();
          return getTextRangeFieldBuilder().getBuilder();
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        public SonarAnalyzer.TextRangeOrBuilder getTextRangeOrBuilder() {
          if (textRangeBuilder_ != null) {
            return textRangeBuilder_.getMessageOrBuilder();
          } else {
            return textRange_ == null ?
                SonarAnalyzer.TextRange.getDefaultInstance() : textRange_;
          }
        }
        /**
         * <code>.sonaranalyzer.TextRange text_range = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder>
            getTextRangeFieldBuilder() {
          if (textRangeBuilder_ == null) {
            textRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder>(
                    getTextRange(),
                    getParentForChildren(),
                    isClean());
            textRange_ = null;
          }
          return textRangeBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:sonaranalyzer.CopyPasteTokenInfo.TokenInfo)
      }

      // @@protoc_insertion_point(class_scope:sonaranalyzer.CopyPasteTokenInfo.TokenInfo)
      private static final SonarAnalyzer.CopyPasteTokenInfo.TokenInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SonarAnalyzer.CopyPasteTokenInfo.TokenInfo();
      }

      public static SonarAnalyzer.CopyPasteTokenInfo.TokenInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TokenInfo>
          PARSER = new com.google.protobuf.AbstractParser<TokenInfo>() {
        public TokenInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new TokenInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TokenInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TokenInfo> getParserForType() {
        return PARSER;
      }

      public SonarAnalyzer.CopyPasteTokenInfo.TokenInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int FILE_PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object filePath_;
    /**
     * <code>string file_path = 1;</code>
     */
    public java.lang.String getFilePath() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filePath_ = s;
        return s;
      }
    }
    /**
     * <code>string file_path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFilePathBytes() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKEN_INFO_FIELD_NUMBER = 2;
    private java.util.List<SonarAnalyzer.CopyPasteTokenInfo.TokenInfo> tokenInfo_;
    /**
     * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
     */
    public java.util.List<SonarAnalyzer.CopyPasteTokenInfo.TokenInfo> getTokenInfoList() {
      return tokenInfo_;
    }
    /**
     * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
     */
    public java.util.List<? extends SonarAnalyzer.CopyPasteTokenInfo.TokenInfoOrBuilder>
        getTokenInfoOrBuilderList() {
      return tokenInfo_;
    }
    /**
     * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
     */
    public int getTokenInfoCount() {
      return tokenInfo_.size();
    }
    /**
     * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
     */
    public SonarAnalyzer.CopyPasteTokenInfo.TokenInfo getTokenInfo(int index) {
      return tokenInfo_.get(index);
    }
    /**
     * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
     */
    public SonarAnalyzer.CopyPasteTokenInfo.TokenInfoOrBuilder getTokenInfoOrBuilder(
        int index) {
      return tokenInfo_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFilePathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, filePath_);
      }
      for (int i = 0; i < tokenInfo_.size(); i++) {
        output.writeMessage(2, tokenInfo_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFilePathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, filePath_);
      }
      for (int i = 0; i < tokenInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tokenInfo_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SonarAnalyzer.CopyPasteTokenInfo)) {
        return super.equals(obj);
      }
      SonarAnalyzer.CopyPasteTokenInfo other = (SonarAnalyzer.CopyPasteTokenInfo) obj;

      boolean result = true;
      result = result && getFilePath()
          .equals(other.getFilePath());
      result = result && getTokenInfoList()
          .equals(other.getTokenInfoList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FILE_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getFilePath().hashCode();
      if (getTokenInfoCount() > 0) {
        hash = (37 * hash) + TOKEN_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getTokenInfoList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SonarAnalyzer.CopyPasteTokenInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.CopyPasteTokenInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.CopyPasteTokenInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.CopyPasteTokenInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.CopyPasteTokenInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.CopyPasteTokenInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.CopyPasteTokenInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.CopyPasteTokenInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.CopyPasteTokenInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.CopyPasteTokenInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SonarAnalyzer.CopyPasteTokenInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used for copy-paste detection
     * </pre>
     *
     * Protobuf type {@code sonaranalyzer.CopyPasteTokenInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sonaranalyzer.CopyPasteTokenInfo)
        SonarAnalyzer.CopyPasteTokenInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SonarAnalyzer.internal_static_sonaranalyzer_CopyPasteTokenInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SonarAnalyzer.internal_static_sonaranalyzer_CopyPasteTokenInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SonarAnalyzer.CopyPasteTokenInfo.class, SonarAnalyzer.CopyPasteTokenInfo.Builder.class);
      }

      // Construct using org.sonarsource.dotnet.protobuf.SonarAnalyzer.CopyPasteTokenInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTokenInfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        filePath_ = "";

        if (tokenInfoBuilder_ == null) {
          tokenInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          tokenInfoBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SonarAnalyzer.internal_static_sonaranalyzer_CopyPasteTokenInfo_descriptor;
      }

      public SonarAnalyzer.CopyPasteTokenInfo getDefaultInstanceForType() {
        return SonarAnalyzer.CopyPasteTokenInfo.getDefaultInstance();
      }

      public SonarAnalyzer.CopyPasteTokenInfo build() {
        SonarAnalyzer.CopyPasteTokenInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SonarAnalyzer.CopyPasteTokenInfo buildPartial() {
        SonarAnalyzer.CopyPasteTokenInfo result = new SonarAnalyzer.CopyPasteTokenInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.filePath_ = filePath_;
        if (tokenInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            tokenInfo_ = java.util.Collections.unmodifiableList(tokenInfo_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tokenInfo_ = tokenInfo_;
        } else {
          result.tokenInfo_ = tokenInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SonarAnalyzer.CopyPasteTokenInfo) {
          return mergeFrom((SonarAnalyzer.CopyPasteTokenInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SonarAnalyzer.CopyPasteTokenInfo other) {
        if (other == SonarAnalyzer.CopyPasteTokenInfo.getDefaultInstance()) return this;
        if (!other.getFilePath().isEmpty()) {
          filePath_ = other.filePath_;
          onChanged();
        }
        if (tokenInfoBuilder_ == null) {
          if (!other.tokenInfo_.isEmpty()) {
            if (tokenInfo_.isEmpty()) {
              tokenInfo_ = other.tokenInfo_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTokenInfoIsMutable();
              tokenInfo_.addAll(other.tokenInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.tokenInfo_.isEmpty()) {
            if (tokenInfoBuilder_.isEmpty()) {
              tokenInfoBuilder_.dispose();
              tokenInfoBuilder_ = null;
              tokenInfo_ = other.tokenInfo_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tokenInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTokenInfoFieldBuilder() : null;
            } else {
              tokenInfoBuilder_.addAllMessages(other.tokenInfo_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SonarAnalyzer.CopyPasteTokenInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SonarAnalyzer.CopyPasteTokenInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object filePath_ = "";
      /**
       * <code>string file_path = 1;</code>
       */
      public java.lang.String getFilePath() {
        java.lang.Object ref = filePath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filePath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFilePathBytes() {
        java.lang.Object ref = filePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder setFilePath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder clearFilePath() {
        
        filePath_ = getDefaultInstance().getFilePath();
        onChanged();
        return this;
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder setFilePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filePath_ = value;
        onChanged();
        return this;
      }

      private java.util.List<SonarAnalyzer.CopyPasteTokenInfo.TokenInfo> tokenInfo_ =
        java.util.Collections.emptyList();
      private void ensureTokenInfoIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          tokenInfo_ = new java.util.ArrayList<SonarAnalyzer.CopyPasteTokenInfo.TokenInfo>(tokenInfo_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SonarAnalyzer.CopyPasteTokenInfo.TokenInfo, SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.Builder, SonarAnalyzer.CopyPasteTokenInfo.TokenInfoOrBuilder> tokenInfoBuilder_;

      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public java.util.List<SonarAnalyzer.CopyPasteTokenInfo.TokenInfo> getTokenInfoList() {
        if (tokenInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tokenInfo_);
        } else {
          return tokenInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public int getTokenInfoCount() {
        if (tokenInfoBuilder_ == null) {
          return tokenInfo_.size();
        } else {
          return tokenInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public SonarAnalyzer.CopyPasteTokenInfo.TokenInfo getTokenInfo(int index) {
        if (tokenInfoBuilder_ == null) {
          return tokenInfo_.get(index);
        } else {
          return tokenInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public Builder setTokenInfo(
          int index, SonarAnalyzer.CopyPasteTokenInfo.TokenInfo value) {
        if (tokenInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTokenInfoIsMutable();
          tokenInfo_.set(index, value);
          onChanged();
        } else {
          tokenInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public Builder setTokenInfo(
          int index, SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.Builder builderForValue) {
        if (tokenInfoBuilder_ == null) {
          ensureTokenInfoIsMutable();
          tokenInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          tokenInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public Builder addTokenInfo(SonarAnalyzer.CopyPasteTokenInfo.TokenInfo value) {
        if (tokenInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTokenInfoIsMutable();
          tokenInfo_.add(value);
          onChanged();
        } else {
          tokenInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public Builder addTokenInfo(
          int index, SonarAnalyzer.CopyPasteTokenInfo.TokenInfo value) {
        if (tokenInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTokenInfoIsMutable();
          tokenInfo_.add(index, value);
          onChanged();
        } else {
          tokenInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public Builder addTokenInfo(
          SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.Builder builderForValue) {
        if (tokenInfoBuilder_ == null) {
          ensureTokenInfoIsMutable();
          tokenInfo_.add(builderForValue.build());
          onChanged();
        } else {
          tokenInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public Builder addTokenInfo(
          int index, SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.Builder builderForValue) {
        if (tokenInfoBuilder_ == null) {
          ensureTokenInfoIsMutable();
          tokenInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          tokenInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public Builder addAllTokenInfo(
          java.lang.Iterable<? extends SonarAnalyzer.CopyPasteTokenInfo.TokenInfo> values) {
        if (tokenInfoBuilder_ == null) {
          ensureTokenInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tokenInfo_);
          onChanged();
        } else {
          tokenInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public Builder clearTokenInfo() {
        if (tokenInfoBuilder_ == null) {
          tokenInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tokenInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public Builder removeTokenInfo(int index) {
        if (tokenInfoBuilder_ == null) {
          ensureTokenInfoIsMutable();
          tokenInfo_.remove(index);
          onChanged();
        } else {
          tokenInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.Builder getTokenInfoBuilder(
          int index) {
        return getTokenInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public SonarAnalyzer.CopyPasteTokenInfo.TokenInfoOrBuilder getTokenInfoOrBuilder(
          int index) {
        if (tokenInfoBuilder_ == null) {
          return tokenInfo_.get(index);  } else {
          return tokenInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public java.util.List<? extends SonarAnalyzer.CopyPasteTokenInfo.TokenInfoOrBuilder>
           getTokenInfoOrBuilderList() {
        if (tokenInfoBuilder_ != null) {
          return tokenInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tokenInfo_);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.Builder addTokenInfoBuilder() {
        return getTokenInfoFieldBuilder().addBuilder(
            SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.Builder addTokenInfoBuilder(
          int index) {
        return getTokenInfoFieldBuilder().addBuilder(
            index, SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .sonaranalyzer.CopyPasteTokenInfo.TokenInfo token_info = 2;</code>
       */
      public java.util.List<SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.Builder>
           getTokenInfoBuilderList() {
        return getTokenInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SonarAnalyzer.CopyPasteTokenInfo.TokenInfo, SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.Builder, SonarAnalyzer.CopyPasteTokenInfo.TokenInfoOrBuilder>
          getTokenInfoFieldBuilder() {
        if (tokenInfoBuilder_ == null) {
          tokenInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SonarAnalyzer.CopyPasteTokenInfo.TokenInfo, SonarAnalyzer.CopyPasteTokenInfo.TokenInfo.Builder, SonarAnalyzer.CopyPasteTokenInfo.TokenInfoOrBuilder>(
                  tokenInfo_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          tokenInfo_ = null;
        }
        return tokenInfoBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:sonaranalyzer.CopyPasteTokenInfo)
    }

    // @@protoc_insertion_point(class_scope:sonaranalyzer.CopyPasteTokenInfo)
    private static final SonarAnalyzer.CopyPasteTokenInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SonarAnalyzer.CopyPasteTokenInfo();
    }

    public static SonarAnalyzer.CopyPasteTokenInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CopyPasteTokenInfo>
        PARSER = new com.google.protobuf.AbstractParser<CopyPasteTokenInfo>() {
      public CopyPasteTokenInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CopyPasteTokenInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CopyPasteTokenInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CopyPasteTokenInfo> getParserForType() {
      return PARSER;
    }

    public SonarAnalyzer.CopyPasteTokenInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MetricsInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sonaranalyzer.MetricsInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string file_path = 1;</code>
     */
    java.lang.String getFilePath();
    /**
     * <code>string file_path = 1;</code>
     */
    com.google.protobuf.ByteString
        getFilePathBytes();

    /**
     * <code>int32 class_count = 2;</code>
     */
    int getClassCount();

    /**
     * <code>int32 statement_count = 3;</code>
     */
    int getStatementCount();

    /**
     * <code>int32 function_count = 4;</code>
     */
    int getFunctionCount();

    /**
     * <code>int32 public_api_count = 5;</code>
     */
    int getPublicApiCount();

    /**
     * <code>int32 public_undocumented_api_count = 6;</code>
     */
    int getPublicUndocumentedApiCount();

    /**
     * <code>int32 complexity = 7;</code>
     */
    int getComplexity();

    /**
     * <code>int32 complexity_in_classes = 8;</code>
     */
    int getComplexityInClasses();

    /**
     * <code>int32 complexity_in_functions = 9;</code>
     */
    int getComplexityInFunctions();

    /**
     * <code>string file_complexity_distribution = 10;</code>
     */
    java.lang.String getFileComplexityDistribution();
    /**
     * <code>string file_complexity_distribution = 10;</code>
     */
    com.google.protobuf.ByteString
        getFileComplexityDistributionBytes();

    /**
     * <code>string function_complexity_distribution = 11;</code>
     */
    java.lang.String getFunctionComplexityDistribution();
    /**
     * <code>string function_complexity_distribution = 11;</code>
     */
    com.google.protobuf.ByteString
        getFunctionComplexityDistributionBytes();

    /**
     * <code>repeated int32 no_sonar_comment = 12;</code>
     */
    java.util.List<java.lang.Integer> getNoSonarCommentList();
    /**
     * <code>repeated int32 no_sonar_comment = 12;</code>
     */
    int getNoSonarCommentCount();
    /**
     * <code>repeated int32 no_sonar_comment = 12;</code>
     */
    int getNoSonarComment(int index);

    /**
     * <code>repeated int32 non_blank_comment = 13;</code>
     */
    java.util.List<java.lang.Integer> getNonBlankCommentList();
    /**
     * <code>repeated int32 non_blank_comment = 13;</code>
     */
    int getNonBlankCommentCount();
    /**
     * <code>repeated int32 non_blank_comment = 13;</code>
     */
    int getNonBlankComment(int index);

    /**
     * <code>repeated int32 code_line = 14;</code>
     */
    java.util.List<java.lang.Integer> getCodeLineList();
    /**
     * <code>repeated int32 code_line = 14;</code>
     */
    int getCodeLineCount();
    /**
     * <code>repeated int32 code_line = 14;</code>
     */
    int getCodeLine(int index);
  }
  /**
   * <pre>
   * Metrics reporting
   * </pre>
   *
   * Protobuf type {@code sonaranalyzer.MetricsInfo}
   */
  public  static final class MetricsInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sonaranalyzer.MetricsInfo)
      MetricsInfoOrBuilder {
    // Use MetricsInfo.newBuilder() to construct.
    private MetricsInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MetricsInfo() {
      filePath_ = "";
      classCount_ = 0;
      statementCount_ = 0;
      functionCount_ = 0;
      publicApiCount_ = 0;
      publicUndocumentedApiCount_ = 0;
      complexity_ = 0;
      complexityInClasses_ = 0;
      complexityInFunctions_ = 0;
      fileComplexityDistribution_ = "";
      functionComplexityDistribution_ = "";
      noSonarComment_ = java.util.Collections.emptyList();
      nonBlankComment_ = java.util.Collections.emptyList();
      codeLine_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MetricsInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              filePath_ = s;
              break;
            }
            case 16: {

              classCount_ = input.readInt32();
              break;
            }
            case 24: {

              statementCount_ = input.readInt32();
              break;
            }
            case 32: {

              functionCount_ = input.readInt32();
              break;
            }
            case 40: {

              publicApiCount_ = input.readInt32();
              break;
            }
            case 48: {

              publicUndocumentedApiCount_ = input.readInt32();
              break;
            }
            case 56: {

              complexity_ = input.readInt32();
              break;
            }
            case 64: {

              complexityInClasses_ = input.readInt32();
              break;
            }
            case 72: {

              complexityInFunctions_ = input.readInt32();
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              fileComplexityDistribution_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              functionComplexityDistribution_ = s;
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                noSonarComment_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              noSonarComment_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                noSonarComment_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                noSonarComment_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                nonBlankComment_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              nonBlankComment_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                nonBlankComment_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                nonBlankComment_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                codeLine_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              codeLine_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                codeLine_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                codeLine_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          noSonarComment_ = java.util.Collections.unmodifiableList(noSonarComment_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          nonBlankComment_ = java.util.Collections.unmodifiableList(nonBlankComment_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          codeLine_ = java.util.Collections.unmodifiableList(codeLine_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SonarAnalyzer.internal_static_sonaranalyzer_MetricsInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SonarAnalyzer.internal_static_sonaranalyzer_MetricsInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SonarAnalyzer.MetricsInfo.class, SonarAnalyzer.MetricsInfo.Builder.class);
    }

    private int bitField0_;
    public static final int FILE_PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object filePath_;
    /**
     * <code>string file_path = 1;</code>
     */
    public java.lang.String getFilePath() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filePath_ = s;
        return s;
      }
    }
    /**
     * <code>string file_path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFilePathBytes() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLASS_COUNT_FIELD_NUMBER = 2;
    private int classCount_;
    /**
     * <code>int32 class_count = 2;</code>
     */
    public int getClassCount() {
      return classCount_;
    }

    public static final int STATEMENT_COUNT_FIELD_NUMBER = 3;
    private int statementCount_;
    /**
     * <code>int32 statement_count = 3;</code>
     */
    public int getStatementCount() {
      return statementCount_;
    }

    public static final int FUNCTION_COUNT_FIELD_NUMBER = 4;
    private int functionCount_;
    /**
     * <code>int32 function_count = 4;</code>
     */
    public int getFunctionCount() {
      return functionCount_;
    }

    public static final int PUBLIC_API_COUNT_FIELD_NUMBER = 5;
    private int publicApiCount_;
    /**
     * <code>int32 public_api_count = 5;</code>
     */
    public int getPublicApiCount() {
      return publicApiCount_;
    }

    public static final int PUBLIC_UNDOCUMENTED_API_COUNT_FIELD_NUMBER = 6;
    private int publicUndocumentedApiCount_;
    /**
     * <code>int32 public_undocumented_api_count = 6;</code>
     */
    public int getPublicUndocumentedApiCount() {
      return publicUndocumentedApiCount_;
    }

    public static final int COMPLEXITY_FIELD_NUMBER = 7;
    private int complexity_;
    /**
     * <code>int32 complexity = 7;</code>
     */
    public int getComplexity() {
      return complexity_;
    }

    public static final int COMPLEXITY_IN_CLASSES_FIELD_NUMBER = 8;
    private int complexityInClasses_;
    /**
     * <code>int32 complexity_in_classes = 8;</code>
     */
    public int getComplexityInClasses() {
      return complexityInClasses_;
    }

    public static final int COMPLEXITY_IN_FUNCTIONS_FIELD_NUMBER = 9;
    private int complexityInFunctions_;
    /**
     * <code>int32 complexity_in_functions = 9;</code>
     */
    public int getComplexityInFunctions() {
      return complexityInFunctions_;
    }

    public static final int FILE_COMPLEXITY_DISTRIBUTION_FIELD_NUMBER = 10;
    private volatile java.lang.Object fileComplexityDistribution_;
    /**
     * <code>string file_complexity_distribution = 10;</code>
     */
    public java.lang.String getFileComplexityDistribution() {
      java.lang.Object ref = fileComplexityDistribution_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileComplexityDistribution_ = s;
        return s;
      }
    }
    /**
     * <code>string file_complexity_distribution = 10;</code>
     */
    public com.google.protobuf.ByteString
        getFileComplexityDistributionBytes() {
      java.lang.Object ref = fileComplexityDistribution_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileComplexityDistribution_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FUNCTION_COMPLEXITY_DISTRIBUTION_FIELD_NUMBER = 11;
    private volatile java.lang.Object functionComplexityDistribution_;
    /**
     * <code>string function_complexity_distribution = 11;</code>
     */
    public java.lang.String getFunctionComplexityDistribution() {
      java.lang.Object ref = functionComplexityDistribution_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        functionComplexityDistribution_ = s;
        return s;
      }
    }
    /**
     * <code>string function_complexity_distribution = 11;</code>
     */
    public com.google.protobuf.ByteString
        getFunctionComplexityDistributionBytes() {
      java.lang.Object ref = functionComplexityDistribution_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        functionComplexityDistribution_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NO_SONAR_COMMENT_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> noSonarComment_;
    /**
     * <code>repeated int32 no_sonar_comment = 12;</code>
     */
    public java.util.List<java.lang.Integer>
        getNoSonarCommentList() {
      return noSonarComment_;
    }
    /**
     * <code>repeated int32 no_sonar_comment = 12;</code>
     */
    public int getNoSonarCommentCount() {
      return noSonarComment_.size();
    }
    /**
     * <code>repeated int32 no_sonar_comment = 12;</code>
     */
    public int getNoSonarComment(int index) {
      return noSonarComment_.get(index);
    }
    private int noSonarCommentMemoizedSerializedSize = -1;

    public static final int NON_BLANK_COMMENT_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> nonBlankComment_;
    /**
     * <code>repeated int32 non_blank_comment = 13;</code>
     */
    public java.util.List<java.lang.Integer>
        getNonBlankCommentList() {
      return nonBlankComment_;
    }
    /**
     * <code>repeated int32 non_blank_comment = 13;</code>
     */
    public int getNonBlankCommentCount() {
      return nonBlankComment_.size();
    }
    /**
     * <code>repeated int32 non_blank_comment = 13;</code>
     */
    public int getNonBlankComment(int index) {
      return nonBlankComment_.get(index);
    }
    private int nonBlankCommentMemoizedSerializedSize = -1;

    public static final int CODE_LINE_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> codeLine_;
    /**
     * <code>repeated int32 code_line = 14;</code>
     */
    public java.util.List<java.lang.Integer>
        getCodeLineList() {
      return codeLine_;
    }
    /**
     * <code>repeated int32 code_line = 14;</code>
     */
    public int getCodeLineCount() {
      return codeLine_.size();
    }
    /**
     * <code>repeated int32 code_line = 14;</code>
     */
    public int getCodeLine(int index) {
      return codeLine_.get(index);
    }
    private int codeLineMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getFilePathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, filePath_);
      }
      if (classCount_ != 0) {
        output.writeInt32(2, classCount_);
      }
      if (statementCount_ != 0) {
        output.writeInt32(3, statementCount_);
      }
      if (functionCount_ != 0) {
        output.writeInt32(4, functionCount_);
      }
      if (publicApiCount_ != 0) {
        output.writeInt32(5, publicApiCount_);
      }
      if (publicUndocumentedApiCount_ != 0) {
        output.writeInt32(6, publicUndocumentedApiCount_);
      }
      if (complexity_ != 0) {
        output.writeInt32(7, complexity_);
      }
      if (complexityInClasses_ != 0) {
        output.writeInt32(8, complexityInClasses_);
      }
      if (complexityInFunctions_ != 0) {
        output.writeInt32(9, complexityInFunctions_);
      }
      if (!getFileComplexityDistributionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, fileComplexityDistribution_);
      }
      if (!getFunctionComplexityDistributionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, functionComplexityDistribution_);
      }
      if (getNoSonarCommentList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(noSonarCommentMemoizedSerializedSize);
      }
      for (int i = 0; i < noSonarComment_.size(); i++) {
        output.writeInt32NoTag(noSonarComment_.get(i));
      }
      if (getNonBlankCommentList().size() > 0) {
        output.writeUInt32NoTag(106);
        output.writeUInt32NoTag(nonBlankCommentMemoizedSerializedSize);
      }
      for (int i = 0; i < nonBlankComment_.size(); i++) {
        output.writeInt32NoTag(nonBlankComment_.get(i));
      }
      if (getCodeLineList().size() > 0) {
        output.writeUInt32NoTag(114);
        output.writeUInt32NoTag(codeLineMemoizedSerializedSize);
      }
      for (int i = 0; i < codeLine_.size(); i++) {
        output.writeInt32NoTag(codeLine_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFilePathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, filePath_);
      }
      if (classCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, classCount_);
      }
      if (statementCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, statementCount_);
      }
      if (functionCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, functionCount_);
      }
      if (publicApiCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, publicApiCount_);
      }
      if (publicUndocumentedApiCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, publicUndocumentedApiCount_);
      }
      if (complexity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, complexity_);
      }
      if (complexityInClasses_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, complexityInClasses_);
      }
      if (complexityInFunctions_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, complexityInFunctions_);
      }
      if (!getFileComplexityDistributionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, fileComplexityDistribution_);
      }
      if (!getFunctionComplexityDistributionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, functionComplexityDistribution_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < noSonarComment_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(noSonarComment_.get(i));
        }
        size += dataSize;
        if (!getNoSonarCommentList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        noSonarCommentMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < nonBlankComment_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(nonBlankComment_.get(i));
        }
        size += dataSize;
        if (!getNonBlankCommentList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        nonBlankCommentMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < codeLine_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(codeLine_.get(i));
        }
        size += dataSize;
        if (!getCodeLineList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        codeLineMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SonarAnalyzer.MetricsInfo)) {
        return super.equals(obj);
      }
      SonarAnalyzer.MetricsInfo other = (SonarAnalyzer.MetricsInfo) obj;

      boolean result = true;
      result = result && getFilePath()
          .equals(other.getFilePath());
      result = result && (getClassCount()
          == other.getClassCount());
      result = result && (getStatementCount()
          == other.getStatementCount());
      result = result && (getFunctionCount()
          == other.getFunctionCount());
      result = result && (getPublicApiCount()
          == other.getPublicApiCount());
      result = result && (getPublicUndocumentedApiCount()
          == other.getPublicUndocumentedApiCount());
      result = result && (getComplexity()
          == other.getComplexity());
      result = result && (getComplexityInClasses()
          == other.getComplexityInClasses());
      result = result && (getComplexityInFunctions()
          == other.getComplexityInFunctions());
      result = result && getFileComplexityDistribution()
          .equals(other.getFileComplexityDistribution());
      result = result && getFunctionComplexityDistribution()
          .equals(other.getFunctionComplexityDistribution());
      result = result && getNoSonarCommentList()
          .equals(other.getNoSonarCommentList());
      result = result && getNonBlankCommentList()
          .equals(other.getNonBlankCommentList());
      result = result && getCodeLineList()
          .equals(other.getCodeLineList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FILE_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getFilePath().hashCode();
      hash = (37 * hash) + CLASS_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getClassCount();
      hash = (37 * hash) + STATEMENT_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getStatementCount();
      hash = (37 * hash) + FUNCTION_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getFunctionCount();
      hash = (37 * hash) + PUBLIC_API_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getPublicApiCount();
      hash = (37 * hash) + PUBLIC_UNDOCUMENTED_API_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getPublicUndocumentedApiCount();
      hash = (37 * hash) + COMPLEXITY_FIELD_NUMBER;
      hash = (53 * hash) + getComplexity();
      hash = (37 * hash) + COMPLEXITY_IN_CLASSES_FIELD_NUMBER;
      hash = (53 * hash) + getComplexityInClasses();
      hash = (37 * hash) + COMPLEXITY_IN_FUNCTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getComplexityInFunctions();
      hash = (37 * hash) + FILE_COMPLEXITY_DISTRIBUTION_FIELD_NUMBER;
      hash = (53 * hash) + getFileComplexityDistribution().hashCode();
      hash = (37 * hash) + FUNCTION_COMPLEXITY_DISTRIBUTION_FIELD_NUMBER;
      hash = (53 * hash) + getFunctionComplexityDistribution().hashCode();
      if (getNoSonarCommentCount() > 0) {
        hash = (37 * hash) + NO_SONAR_COMMENT_FIELD_NUMBER;
        hash = (53 * hash) + getNoSonarCommentList().hashCode();
      }
      if (getNonBlankCommentCount() > 0) {
        hash = (37 * hash) + NON_BLANK_COMMENT_FIELD_NUMBER;
        hash = (53 * hash) + getNonBlankCommentList().hashCode();
      }
      if (getCodeLineCount() > 0) {
        hash = (37 * hash) + CODE_LINE_FIELD_NUMBER;
        hash = (53 * hash) + getCodeLineList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SonarAnalyzer.MetricsInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.MetricsInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.MetricsInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.MetricsInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.MetricsInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.MetricsInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.MetricsInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.MetricsInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.MetricsInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.MetricsInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SonarAnalyzer.MetricsInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Metrics reporting
     * </pre>
     *
     * Protobuf type {@code sonaranalyzer.MetricsInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sonaranalyzer.MetricsInfo)
        SonarAnalyzer.MetricsInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SonarAnalyzer.internal_static_sonaranalyzer_MetricsInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SonarAnalyzer.internal_static_sonaranalyzer_MetricsInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SonarAnalyzer.MetricsInfo.class, SonarAnalyzer.MetricsInfo.Builder.class);
      }

      // Construct using org.sonarsource.dotnet.protobuf.SonarAnalyzer.MetricsInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        filePath_ = "";

        classCount_ = 0;

        statementCount_ = 0;

        functionCount_ = 0;

        publicApiCount_ = 0;

        publicUndocumentedApiCount_ = 0;

        complexity_ = 0;

        complexityInClasses_ = 0;

        complexityInFunctions_ = 0;

        fileComplexityDistribution_ = "";

        functionComplexityDistribution_ = "";

        noSonarComment_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        nonBlankComment_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        codeLine_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SonarAnalyzer.internal_static_sonaranalyzer_MetricsInfo_descriptor;
      }

      public SonarAnalyzer.MetricsInfo getDefaultInstanceForType() {
        return SonarAnalyzer.MetricsInfo.getDefaultInstance();
      }

      public SonarAnalyzer.MetricsInfo build() {
        SonarAnalyzer.MetricsInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SonarAnalyzer.MetricsInfo buildPartial() {
        SonarAnalyzer.MetricsInfo result = new SonarAnalyzer.MetricsInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.filePath_ = filePath_;
        result.classCount_ = classCount_;
        result.statementCount_ = statementCount_;
        result.functionCount_ = functionCount_;
        result.publicApiCount_ = publicApiCount_;
        result.publicUndocumentedApiCount_ = publicUndocumentedApiCount_;
        result.complexity_ = complexity_;
        result.complexityInClasses_ = complexityInClasses_;
        result.complexityInFunctions_ = complexityInFunctions_;
        result.fileComplexityDistribution_ = fileComplexityDistribution_;
        result.functionComplexityDistribution_ = functionComplexityDistribution_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          noSonarComment_ = java.util.Collections.unmodifiableList(noSonarComment_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.noSonarComment_ = noSonarComment_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          nonBlankComment_ = java.util.Collections.unmodifiableList(nonBlankComment_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.nonBlankComment_ = nonBlankComment_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          codeLine_ = java.util.Collections.unmodifiableList(codeLine_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.codeLine_ = codeLine_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SonarAnalyzer.MetricsInfo) {
          return mergeFrom((SonarAnalyzer.MetricsInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SonarAnalyzer.MetricsInfo other) {
        if (other == SonarAnalyzer.MetricsInfo.getDefaultInstance()) return this;
        if (!other.getFilePath().isEmpty()) {
          filePath_ = other.filePath_;
          onChanged();
        }
        if (other.getClassCount() != 0) {
          setClassCount(other.getClassCount());
        }
        if (other.getStatementCount() != 0) {
          setStatementCount(other.getStatementCount());
        }
        if (other.getFunctionCount() != 0) {
          setFunctionCount(other.getFunctionCount());
        }
        if (other.getPublicApiCount() != 0) {
          setPublicApiCount(other.getPublicApiCount());
        }
        if (other.getPublicUndocumentedApiCount() != 0) {
          setPublicUndocumentedApiCount(other.getPublicUndocumentedApiCount());
        }
        if (other.getComplexity() != 0) {
          setComplexity(other.getComplexity());
        }
        if (other.getComplexityInClasses() != 0) {
          setComplexityInClasses(other.getComplexityInClasses());
        }
        if (other.getComplexityInFunctions() != 0) {
          setComplexityInFunctions(other.getComplexityInFunctions());
        }
        if (!other.getFileComplexityDistribution().isEmpty()) {
          fileComplexityDistribution_ = other.fileComplexityDistribution_;
          onChanged();
        }
        if (!other.getFunctionComplexityDistribution().isEmpty()) {
          functionComplexityDistribution_ = other.functionComplexityDistribution_;
          onChanged();
        }
        if (!other.noSonarComment_.isEmpty()) {
          if (noSonarComment_.isEmpty()) {
            noSonarComment_ = other.noSonarComment_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureNoSonarCommentIsMutable();
            noSonarComment_.addAll(other.noSonarComment_);
          }
          onChanged();
        }
        if (!other.nonBlankComment_.isEmpty()) {
          if (nonBlankComment_.isEmpty()) {
            nonBlankComment_ = other.nonBlankComment_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureNonBlankCommentIsMutable();
            nonBlankComment_.addAll(other.nonBlankComment_);
          }
          onChanged();
        }
        if (!other.codeLine_.isEmpty()) {
          if (codeLine_.isEmpty()) {
            codeLine_ = other.codeLine_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureCodeLineIsMutable();
            codeLine_.addAll(other.codeLine_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SonarAnalyzer.MetricsInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SonarAnalyzer.MetricsInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object filePath_ = "";
      /**
       * <code>string file_path = 1;</code>
       */
      public java.lang.String getFilePath() {
        java.lang.Object ref = filePath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filePath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFilePathBytes() {
        java.lang.Object ref = filePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder setFilePath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder clearFilePath() {
        
        filePath_ = getDefaultInstance().getFilePath();
        onChanged();
        return this;
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder setFilePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filePath_ = value;
        onChanged();
        return this;
      }

      private int classCount_ ;
      /**
       * <code>int32 class_count = 2;</code>
       */
      public int getClassCount() {
        return classCount_;
      }
      /**
       * <code>int32 class_count = 2;</code>
       */
      public Builder setClassCount(int value) {
        
        classCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 class_count = 2;</code>
       */
      public Builder clearClassCount() {
        
        classCount_ = 0;
        onChanged();
        return this;
      }

      private int statementCount_ ;
      /**
       * <code>int32 statement_count = 3;</code>
       */
      public int getStatementCount() {
        return statementCount_;
      }
      /**
       * <code>int32 statement_count = 3;</code>
       */
      public Builder setStatementCount(int value) {
        
        statementCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 statement_count = 3;</code>
       */
      public Builder clearStatementCount() {
        
        statementCount_ = 0;
        onChanged();
        return this;
      }

      private int functionCount_ ;
      /**
       * <code>int32 function_count = 4;</code>
       */
      public int getFunctionCount() {
        return functionCount_;
      }
      /**
       * <code>int32 function_count = 4;</code>
       */
      public Builder setFunctionCount(int value) {
        
        functionCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 function_count = 4;</code>
       */
      public Builder clearFunctionCount() {
        
        functionCount_ = 0;
        onChanged();
        return this;
      }

      private int publicApiCount_ ;
      /**
       * <code>int32 public_api_count = 5;</code>
       */
      public int getPublicApiCount() {
        return publicApiCount_;
      }
      /**
       * <code>int32 public_api_count = 5;</code>
       */
      public Builder setPublicApiCount(int value) {
        
        publicApiCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 public_api_count = 5;</code>
       */
      public Builder clearPublicApiCount() {
        
        publicApiCount_ = 0;
        onChanged();
        return this;
      }

      private int publicUndocumentedApiCount_ ;
      /**
       * <code>int32 public_undocumented_api_count = 6;</code>
       */
      public int getPublicUndocumentedApiCount() {
        return publicUndocumentedApiCount_;
      }
      /**
       * <code>int32 public_undocumented_api_count = 6;</code>
       */
      public Builder setPublicUndocumentedApiCount(int value) {
        
        publicUndocumentedApiCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 public_undocumented_api_count = 6;</code>
       */
      public Builder clearPublicUndocumentedApiCount() {
        
        publicUndocumentedApiCount_ = 0;
        onChanged();
        return this;
      }

      private int complexity_ ;
      /**
       * <code>int32 complexity = 7;</code>
       */
      public int getComplexity() {
        return complexity_;
      }
      /**
       * <code>int32 complexity = 7;</code>
       */
      public Builder setComplexity(int value) {
        
        complexity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 complexity = 7;</code>
       */
      public Builder clearComplexity() {
        
        complexity_ = 0;
        onChanged();
        return this;
      }

      private int complexityInClasses_ ;
      /**
       * <code>int32 complexity_in_classes = 8;</code>
       */
      public int getComplexityInClasses() {
        return complexityInClasses_;
      }
      /**
       * <code>int32 complexity_in_classes = 8;</code>
       */
      public Builder setComplexityInClasses(int value) {
        
        complexityInClasses_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 complexity_in_classes = 8;</code>
       */
      public Builder clearComplexityInClasses() {
        
        complexityInClasses_ = 0;
        onChanged();
        return this;
      }

      private int complexityInFunctions_ ;
      /**
       * <code>int32 complexity_in_functions = 9;</code>
       */
      public int getComplexityInFunctions() {
        return complexityInFunctions_;
      }
      /**
       * <code>int32 complexity_in_functions = 9;</code>
       */
      public Builder setComplexityInFunctions(int value) {
        
        complexityInFunctions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 complexity_in_functions = 9;</code>
       */
      public Builder clearComplexityInFunctions() {
        
        complexityInFunctions_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fileComplexityDistribution_ = "";
      /**
       * <code>string file_complexity_distribution = 10;</code>
       */
      public java.lang.String getFileComplexityDistribution() {
        java.lang.Object ref = fileComplexityDistribution_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileComplexityDistribution_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string file_complexity_distribution = 10;</code>
       */
      public com.google.protobuf.ByteString
          getFileComplexityDistributionBytes() {
        java.lang.Object ref = fileComplexityDistribution_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileComplexityDistribution_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string file_complexity_distribution = 10;</code>
       */
      public Builder setFileComplexityDistribution(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fileComplexityDistribution_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string file_complexity_distribution = 10;</code>
       */
      public Builder clearFileComplexityDistribution() {
        
        fileComplexityDistribution_ = getDefaultInstance().getFileComplexityDistribution();
        onChanged();
        return this;
      }
      /**
       * <code>string file_complexity_distribution = 10;</code>
       */
      public Builder setFileComplexityDistributionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fileComplexityDistribution_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object functionComplexityDistribution_ = "";
      /**
       * <code>string function_complexity_distribution = 11;</code>
       */
      public java.lang.String getFunctionComplexityDistribution() {
        java.lang.Object ref = functionComplexityDistribution_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          functionComplexityDistribution_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string function_complexity_distribution = 11;</code>
       */
      public com.google.protobuf.ByteString
          getFunctionComplexityDistributionBytes() {
        java.lang.Object ref = functionComplexityDistribution_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          functionComplexityDistribution_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string function_complexity_distribution = 11;</code>
       */
      public Builder setFunctionComplexityDistribution(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        functionComplexityDistribution_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string function_complexity_distribution = 11;</code>
       */
      public Builder clearFunctionComplexityDistribution() {
        
        functionComplexityDistribution_ = getDefaultInstance().getFunctionComplexityDistribution();
        onChanged();
        return this;
      }
      /**
       * <code>string function_complexity_distribution = 11;</code>
       */
      public Builder setFunctionComplexityDistributionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        functionComplexityDistribution_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> noSonarComment_ = java.util.Collections.emptyList();
      private void ensureNoSonarCommentIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          noSonarComment_ = new java.util.ArrayList<java.lang.Integer>(noSonarComment_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 no_sonar_comment = 12;</code>
       */
      public java.util.List<java.lang.Integer>
          getNoSonarCommentList() {
        return java.util.Collections.unmodifiableList(noSonarComment_);
      }
      /**
       * <code>repeated int32 no_sonar_comment = 12;</code>
       */
      public int getNoSonarCommentCount() {
        return noSonarComment_.size();
      }
      /**
       * <code>repeated int32 no_sonar_comment = 12;</code>
       */
      public int getNoSonarComment(int index) {
        return noSonarComment_.get(index);
      }
      /**
       * <code>repeated int32 no_sonar_comment = 12;</code>
       */
      public Builder setNoSonarComment(
          int index, int value) {
        ensureNoSonarCommentIsMutable();
        noSonarComment_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 no_sonar_comment = 12;</code>
       */
      public Builder addNoSonarComment(int value) {
        ensureNoSonarCommentIsMutable();
        noSonarComment_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 no_sonar_comment = 12;</code>
       */
      public Builder addAllNoSonarComment(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNoSonarCommentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, noSonarComment_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 no_sonar_comment = 12;</code>
       */
      public Builder clearNoSonarComment() {
        noSonarComment_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> nonBlankComment_ = java.util.Collections.emptyList();
      private void ensureNonBlankCommentIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          nonBlankComment_ = new java.util.ArrayList<java.lang.Integer>(nonBlankComment_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 non_blank_comment = 13;</code>
       */
      public java.util.List<java.lang.Integer>
          getNonBlankCommentList() {
        return java.util.Collections.unmodifiableList(nonBlankComment_);
      }
      /**
       * <code>repeated int32 non_blank_comment = 13;</code>
       */
      public int getNonBlankCommentCount() {
        return nonBlankComment_.size();
      }
      /**
       * <code>repeated int32 non_blank_comment = 13;</code>
       */
      public int getNonBlankComment(int index) {
        return nonBlankComment_.get(index);
      }
      /**
       * <code>repeated int32 non_blank_comment = 13;</code>
       */
      public Builder setNonBlankComment(
          int index, int value) {
        ensureNonBlankCommentIsMutable();
        nonBlankComment_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 non_blank_comment = 13;</code>
       */
      public Builder addNonBlankComment(int value) {
        ensureNonBlankCommentIsMutable();
        nonBlankComment_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 non_blank_comment = 13;</code>
       */
      public Builder addAllNonBlankComment(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNonBlankCommentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nonBlankComment_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 non_blank_comment = 13;</code>
       */
      public Builder clearNonBlankComment() {
        nonBlankComment_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> codeLine_ = java.util.Collections.emptyList();
      private void ensureCodeLineIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          codeLine_ = new java.util.ArrayList<java.lang.Integer>(codeLine_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 code_line = 14;</code>
       */
      public java.util.List<java.lang.Integer>
          getCodeLineList() {
        return java.util.Collections.unmodifiableList(codeLine_);
      }
      /**
       * <code>repeated int32 code_line = 14;</code>
       */
      public int getCodeLineCount() {
        return codeLine_.size();
      }
      /**
       * <code>repeated int32 code_line = 14;</code>
       */
      public int getCodeLine(int index) {
        return codeLine_.get(index);
      }
      /**
       * <code>repeated int32 code_line = 14;</code>
       */
      public Builder setCodeLine(
          int index, int value) {
        ensureCodeLineIsMutable();
        codeLine_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 code_line = 14;</code>
       */
      public Builder addCodeLine(int value) {
        ensureCodeLineIsMutable();
        codeLine_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 code_line = 14;</code>
       */
      public Builder addAllCodeLine(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCodeLineIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, codeLine_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 code_line = 14;</code>
       */
      public Builder clearCodeLine() {
        codeLine_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:sonaranalyzer.MetricsInfo)
    }

    // @@protoc_insertion_point(class_scope:sonaranalyzer.MetricsInfo)
    private static final SonarAnalyzer.MetricsInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SonarAnalyzer.MetricsInfo();
    }

    public static SonarAnalyzer.MetricsInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MetricsInfo>
        PARSER = new com.google.protobuf.AbstractParser<MetricsInfo>() {
      public MetricsInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MetricsInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MetricsInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MetricsInfo> getParserForType() {
      return PARSER;
    }

    public SonarAnalyzer.MetricsInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FileIssuesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sonaranalyzer.FileIssues)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string file_path = 1;</code>
     */
    java.lang.String getFilePath();
    /**
     * <code>string file_path = 1;</code>
     */
    com.google.protobuf.ByteString
        getFilePathBytes();

    /**
     * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
     */
    java.util.List<SonarAnalyzer.FileIssues.Issue>
        getIssueList();
    /**
     * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
     */
    SonarAnalyzer.FileIssues.Issue getIssue(int index);
    /**
     * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
     */
    int getIssueCount();
    /**
     * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
     */
    java.util.List<? extends SonarAnalyzer.FileIssues.IssueOrBuilder>
        getIssueOrBuilderList();
    /**
     * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
     */
    SonarAnalyzer.FileIssues.IssueOrBuilder getIssueOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Issues
   * </pre>
   *
   * Protobuf type {@code sonaranalyzer.FileIssues}
   */
  public  static final class FileIssues extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sonaranalyzer.FileIssues)
      FileIssuesOrBuilder {
    // Use FileIssues.newBuilder() to construct.
    private FileIssues(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FileIssues() {
      filePath_ = "";
      issue_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FileIssues(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              filePath_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                issue_ = new java.util.ArrayList<SonarAnalyzer.FileIssues.Issue>();
                mutable_bitField0_ |= 0x00000002;
              }
              issue_.add(
                  input.readMessage(SonarAnalyzer.FileIssues.Issue.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          issue_ = java.util.Collections.unmodifiableList(issue_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SonarAnalyzer.internal_static_sonaranalyzer_FileIssues_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SonarAnalyzer.internal_static_sonaranalyzer_FileIssues_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SonarAnalyzer.FileIssues.class, SonarAnalyzer.FileIssues.Builder.class);
    }

    public interface IssueOrBuilder extends
        // @@protoc_insertion_point(interface_extends:sonaranalyzer.FileIssues.Issue)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string id = 1;</code>
       */
      java.lang.String getId();
      /**
       * <code>string id = 1;</code>
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <code>string message = 2;</code>
       */
      java.lang.String getMessage();
      /**
       * <code>string message = 2;</code>
       */
      com.google.protobuf.ByteString
          getMessageBytes();

      /**
       * <code>.sonaranalyzer.TextRange location = 3;</code>
       */
      boolean hasLocation();
      /**
       * <code>.sonaranalyzer.TextRange location = 3;</code>
       */
      SonarAnalyzer.TextRange getLocation();
      /**
       * <code>.sonaranalyzer.TextRange location = 3;</code>
       */
      SonarAnalyzer.TextRangeOrBuilder getLocationOrBuilder();
    }
    /**
     * Protobuf type {@code sonaranalyzer.FileIssues.Issue}
     */
    public  static final class Issue extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:sonaranalyzer.FileIssues.Issue)
        IssueOrBuilder {
      // Use Issue.newBuilder() to construct.
      private Issue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Issue() {
        id_ = "";
        message_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Issue(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                id_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                message_ = s;
                break;
              }
              case 26: {
                SonarAnalyzer.TextRange.Builder subBuilder = null;
                if (location_ != null) {
                  subBuilder = location_.toBuilder();
                }
                location_ = input.readMessage(SonarAnalyzer.TextRange.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(location_);
                  location_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SonarAnalyzer.internal_static_sonaranalyzer_FileIssues_Issue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SonarAnalyzer.internal_static_sonaranalyzer_FileIssues_Issue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SonarAnalyzer.FileIssues.Issue.class, SonarAnalyzer.FileIssues.Issue.Builder.class);
      }

      public static final int ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object id_;
      /**
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MESSAGE_FIELD_NUMBER = 2;
      private volatile java.lang.Object message_;
      /**
       * <code>string message = 2;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        }
      }
      /**
       * <code>string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LOCATION_FIELD_NUMBER = 3;
      private SonarAnalyzer.TextRange location_;
      /**
       * <code>.sonaranalyzer.TextRange location = 3;</code>
       */
      public boolean hasLocation() {
        return location_ != null;
      }
      /**
       * <code>.sonaranalyzer.TextRange location = 3;</code>
       */
      public SonarAnalyzer.TextRange getLocation() {
        return location_ == null ? SonarAnalyzer.TextRange.getDefaultInstance() : location_;
      }
      /**
       * <code>.sonaranalyzer.TextRange location = 3;</code>
       */
      public SonarAnalyzer.TextRangeOrBuilder getLocationOrBuilder() {
        return getLocation();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getIdBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
        }
        if (!getMessageBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
        }
        if (location_ != null) {
          output.writeMessage(3, getLocation());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getIdBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
        }
        if (!getMessageBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
        }
        if (location_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getLocation());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof SonarAnalyzer.FileIssues.Issue)) {
          return super.equals(obj);
        }
        SonarAnalyzer.FileIssues.Issue other = (SonarAnalyzer.FileIssues.Issue) obj;

        boolean result = true;
        result = result && getId()
            .equals(other.getId());
        result = result && getMessage()
            .equals(other.getMessage());
        result = result && (hasLocation() == other.hasLocation());
        if (hasLocation()) {
          result = result && getLocation()
              .equals(other.getLocation());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
        if (hasLocation()) {
          hash = (37 * hash) + LOCATION_FIELD_NUMBER;
          hash = (53 * hash) + getLocation().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static SonarAnalyzer.FileIssues.Issue parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SonarAnalyzer.FileIssues.Issue parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SonarAnalyzer.FileIssues.Issue parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SonarAnalyzer.FileIssues.Issue parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SonarAnalyzer.FileIssues.Issue parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SonarAnalyzer.FileIssues.Issue parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static SonarAnalyzer.FileIssues.Issue parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static SonarAnalyzer.FileIssues.Issue parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static SonarAnalyzer.FileIssues.Issue parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static SonarAnalyzer.FileIssues.Issue parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(SonarAnalyzer.FileIssues.Issue prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code sonaranalyzer.FileIssues.Issue}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:sonaranalyzer.FileIssues.Issue)
          SonarAnalyzer.FileIssues.IssueOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SonarAnalyzer.internal_static_sonaranalyzer_FileIssues_Issue_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SonarAnalyzer.internal_static_sonaranalyzer_FileIssues_Issue_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SonarAnalyzer.FileIssues.Issue.class, SonarAnalyzer.FileIssues.Issue.Builder.class);
        }

        // Construct using org.sonarsource.dotnet.protobuf.SonarAnalyzer.FileIssues.Issue.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          id_ = "";

          message_ = "";

          if (locationBuilder_ == null) {
            location_ = null;
          } else {
            location_ = null;
            locationBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SonarAnalyzer.internal_static_sonaranalyzer_FileIssues_Issue_descriptor;
        }

        public SonarAnalyzer.FileIssues.Issue getDefaultInstanceForType() {
          return SonarAnalyzer.FileIssues.Issue.getDefaultInstance();
        }

        public SonarAnalyzer.FileIssues.Issue build() {
          SonarAnalyzer.FileIssues.Issue result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SonarAnalyzer.FileIssues.Issue buildPartial() {
          SonarAnalyzer.FileIssues.Issue result = new SonarAnalyzer.FileIssues.Issue(this);
          result.id_ = id_;
          result.message_ = message_;
          if (locationBuilder_ == null) {
            result.location_ = location_;
          } else {
            result.location_ = locationBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SonarAnalyzer.FileIssues.Issue) {
            return mergeFrom((SonarAnalyzer.FileIssues.Issue)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SonarAnalyzer.FileIssues.Issue other) {
          if (other == SonarAnalyzer.FileIssues.Issue.getDefaultInstance()) return this;
          if (!other.getId().isEmpty()) {
            id_ = other.id_;
            onChanged();
          }
          if (!other.getMessage().isEmpty()) {
            message_ = other.message_;
            onChanged();
          }
          if (other.hasLocation()) {
            mergeLocation(other.getLocation());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SonarAnalyzer.FileIssues.Issue parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SonarAnalyzer.FileIssues.Issue) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object id_ = "";
        /**
         * <code>string id = 1;</code>
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            id_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string id = 1;</code>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string id = 1;</code>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string id = 1;</code>
         */
        public Builder clearId() {
          
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <code>string id = 1;</code>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          id_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object message_ = "";
        /**
         * <code>string message = 2;</code>
         */
        public java.lang.String getMessage() {
          java.lang.Object ref = message_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            message_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string message = 2;</code>
         */
        public com.google.protobuf.ByteString
            getMessageBytes() {
          java.lang.Object ref = message_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            message_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string message = 2;</code>
         */
        public Builder setMessage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          message_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string message = 2;</code>
         */
        public Builder clearMessage() {
          
          message_ = getDefaultInstance().getMessage();
          onChanged();
          return this;
        }
        /**
         * <code>string message = 2;</code>
         */
        public Builder setMessageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          message_ = value;
          onChanged();
          return this;
        }

        private SonarAnalyzer.TextRange location_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder> locationBuilder_;
        /**
         * <code>.sonaranalyzer.TextRange location = 3;</code>
         */
        public boolean hasLocation() {
          return locationBuilder_ != null || location_ != null;
        }
        /**
         * <code>.sonaranalyzer.TextRange location = 3;</code>
         */
        public SonarAnalyzer.TextRange getLocation() {
          if (locationBuilder_ == null) {
            return location_ == null ? SonarAnalyzer.TextRange.getDefaultInstance() : location_;
          } else {
            return locationBuilder_.getMessage();
          }
        }
        /**
         * <code>.sonaranalyzer.TextRange location = 3;</code>
         */
        public Builder setLocation(SonarAnalyzer.TextRange value) {
          if (locationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            location_ = value;
            onChanged();
          } else {
            locationBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange location = 3;</code>
         */
        public Builder setLocation(
            SonarAnalyzer.TextRange.Builder builderForValue) {
          if (locationBuilder_ == null) {
            location_ = builderForValue.build();
            onChanged();
          } else {
            locationBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange location = 3;</code>
         */
        public Builder mergeLocation(SonarAnalyzer.TextRange value) {
          if (locationBuilder_ == null) {
            if (location_ != null) {
              location_ =
                SonarAnalyzer.TextRange.newBuilder(location_).mergeFrom(value).buildPartial();
            } else {
              location_ = value;
            }
            onChanged();
          } else {
            locationBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange location = 3;</code>
         */
        public Builder clearLocation() {
          if (locationBuilder_ == null) {
            location_ = null;
            onChanged();
          } else {
            location_ = null;
            locationBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.sonaranalyzer.TextRange location = 3;</code>
         */
        public SonarAnalyzer.TextRange.Builder getLocationBuilder() {
          
          onChanged();
          return getLocationFieldBuilder().getBuilder();
        }
        /**
         * <code>.sonaranalyzer.TextRange location = 3;</code>
         */
        public SonarAnalyzer.TextRangeOrBuilder getLocationOrBuilder() {
          if (locationBuilder_ != null) {
            return locationBuilder_.getMessageOrBuilder();
          } else {
            return location_ == null ?
                SonarAnalyzer.TextRange.getDefaultInstance() : location_;
          }
        }
        /**
         * <code>.sonaranalyzer.TextRange location = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder>
            getLocationFieldBuilder() {
          if (locationBuilder_ == null) {
            locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                SonarAnalyzer.TextRange, SonarAnalyzer.TextRange.Builder, SonarAnalyzer.TextRangeOrBuilder>(
                    getLocation(),
                    getParentForChildren(),
                    isClean());
            location_ = null;
          }
          return locationBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:sonaranalyzer.FileIssues.Issue)
      }

      // @@protoc_insertion_point(class_scope:sonaranalyzer.FileIssues.Issue)
      private static final SonarAnalyzer.FileIssues.Issue DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new SonarAnalyzer.FileIssues.Issue();
      }

      public static SonarAnalyzer.FileIssues.Issue getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Issue>
          PARSER = new com.google.protobuf.AbstractParser<Issue>() {
        public Issue parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Issue(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Issue> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Issue> getParserForType() {
        return PARSER;
      }

      public SonarAnalyzer.FileIssues.Issue getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int FILE_PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object filePath_;
    /**
     * <code>string file_path = 1;</code>
     */
    public java.lang.String getFilePath() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filePath_ = s;
        return s;
      }
    }
    /**
     * <code>string file_path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFilePathBytes() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISSUE_FIELD_NUMBER = 2;
    private java.util.List<SonarAnalyzer.FileIssues.Issue> issue_;
    /**
     * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
     */
    public java.util.List<SonarAnalyzer.FileIssues.Issue> getIssueList() {
      return issue_;
    }
    /**
     * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
     */
    public java.util.List<? extends SonarAnalyzer.FileIssues.IssueOrBuilder>
        getIssueOrBuilderList() {
      return issue_;
    }
    /**
     * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
     */
    public int getIssueCount() {
      return issue_.size();
    }
    /**
     * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
     */
    public SonarAnalyzer.FileIssues.Issue getIssue(int index) {
      return issue_.get(index);
    }
    /**
     * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
     */
    public SonarAnalyzer.FileIssues.IssueOrBuilder getIssueOrBuilder(
        int index) {
      return issue_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFilePathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, filePath_);
      }
      for (int i = 0; i < issue_.size(); i++) {
        output.writeMessage(2, issue_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFilePathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, filePath_);
      }
      for (int i = 0; i < issue_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, issue_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SonarAnalyzer.FileIssues)) {
        return super.equals(obj);
      }
      SonarAnalyzer.FileIssues other = (SonarAnalyzer.FileIssues) obj;

      boolean result = true;
      result = result && getFilePath()
          .equals(other.getFilePath());
      result = result && getIssueList()
          .equals(other.getIssueList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FILE_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getFilePath().hashCode();
      if (getIssueCount() > 0) {
        hash = (37 * hash) + ISSUE_FIELD_NUMBER;
        hash = (53 * hash) + getIssueList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SonarAnalyzer.FileIssues parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.FileIssues parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.FileIssues parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.FileIssues parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.FileIssues parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.FileIssues parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.FileIssues parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.FileIssues parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.FileIssues parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.FileIssues parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SonarAnalyzer.FileIssues prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Issues
     * </pre>
     *
     * Protobuf type {@code sonaranalyzer.FileIssues}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sonaranalyzer.FileIssues)
        SonarAnalyzer.FileIssuesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SonarAnalyzer.internal_static_sonaranalyzer_FileIssues_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SonarAnalyzer.internal_static_sonaranalyzer_FileIssues_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SonarAnalyzer.FileIssues.class, SonarAnalyzer.FileIssues.Builder.class);
      }

      // Construct using org.sonarsource.dotnet.protobuf.SonarAnalyzer.FileIssues.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getIssueFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        filePath_ = "";

        if (issueBuilder_ == null) {
          issue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          issueBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SonarAnalyzer.internal_static_sonaranalyzer_FileIssues_descriptor;
      }

      public SonarAnalyzer.FileIssues getDefaultInstanceForType() {
        return SonarAnalyzer.FileIssues.getDefaultInstance();
      }

      public SonarAnalyzer.FileIssues build() {
        SonarAnalyzer.FileIssues result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SonarAnalyzer.FileIssues buildPartial() {
        SonarAnalyzer.FileIssues result = new SonarAnalyzer.FileIssues(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.filePath_ = filePath_;
        if (issueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            issue_ = java.util.Collections.unmodifiableList(issue_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.issue_ = issue_;
        } else {
          result.issue_ = issueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SonarAnalyzer.FileIssues) {
          return mergeFrom((SonarAnalyzer.FileIssues)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SonarAnalyzer.FileIssues other) {
        if (other == SonarAnalyzer.FileIssues.getDefaultInstance()) return this;
        if (!other.getFilePath().isEmpty()) {
          filePath_ = other.filePath_;
          onChanged();
        }
        if (issueBuilder_ == null) {
          if (!other.issue_.isEmpty()) {
            if (issue_.isEmpty()) {
              issue_ = other.issue_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureIssueIsMutable();
              issue_.addAll(other.issue_);
            }
            onChanged();
          }
        } else {
          if (!other.issue_.isEmpty()) {
            if (issueBuilder_.isEmpty()) {
              issueBuilder_.dispose();
              issueBuilder_ = null;
              issue_ = other.issue_;
              bitField0_ = (bitField0_ & ~0x00000002);
              issueBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getIssueFieldBuilder() : null;
            } else {
              issueBuilder_.addAllMessages(other.issue_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SonarAnalyzer.FileIssues parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SonarAnalyzer.FileIssues) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object filePath_ = "";
      /**
       * <code>string file_path = 1;</code>
       */
      public java.lang.String getFilePath() {
        java.lang.Object ref = filePath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filePath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFilePathBytes() {
        java.lang.Object ref = filePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder setFilePath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder clearFilePath() {
        
        filePath_ = getDefaultInstance().getFilePath();
        onChanged();
        return this;
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder setFilePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filePath_ = value;
        onChanged();
        return this;
      }

      private java.util.List<SonarAnalyzer.FileIssues.Issue> issue_ =
        java.util.Collections.emptyList();
      private void ensureIssueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          issue_ = new java.util.ArrayList<SonarAnalyzer.FileIssues.Issue>(issue_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SonarAnalyzer.FileIssues.Issue, SonarAnalyzer.FileIssues.Issue.Builder, SonarAnalyzer.FileIssues.IssueOrBuilder> issueBuilder_;

      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public java.util.List<SonarAnalyzer.FileIssues.Issue> getIssueList() {
        if (issueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(issue_);
        } else {
          return issueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public int getIssueCount() {
        if (issueBuilder_ == null) {
          return issue_.size();
        } else {
          return issueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public SonarAnalyzer.FileIssues.Issue getIssue(int index) {
        if (issueBuilder_ == null) {
          return issue_.get(index);
        } else {
          return issueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public Builder setIssue(
          int index, SonarAnalyzer.FileIssues.Issue value) {
        if (issueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIssueIsMutable();
          issue_.set(index, value);
          onChanged();
        } else {
          issueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public Builder setIssue(
          int index, SonarAnalyzer.FileIssues.Issue.Builder builderForValue) {
        if (issueBuilder_ == null) {
          ensureIssueIsMutable();
          issue_.set(index, builderForValue.build());
          onChanged();
        } else {
          issueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public Builder addIssue(SonarAnalyzer.FileIssues.Issue value) {
        if (issueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIssueIsMutable();
          issue_.add(value);
          onChanged();
        } else {
          issueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public Builder addIssue(
          int index, SonarAnalyzer.FileIssues.Issue value) {
        if (issueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIssueIsMutable();
          issue_.add(index, value);
          onChanged();
        } else {
          issueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public Builder addIssue(
          SonarAnalyzer.FileIssues.Issue.Builder builderForValue) {
        if (issueBuilder_ == null) {
          ensureIssueIsMutable();
          issue_.add(builderForValue.build());
          onChanged();
        } else {
          issueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public Builder addIssue(
          int index, SonarAnalyzer.FileIssues.Issue.Builder builderForValue) {
        if (issueBuilder_ == null) {
          ensureIssueIsMutable();
          issue_.add(index, builderForValue.build());
          onChanged();
        } else {
          issueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public Builder addAllIssue(
          java.lang.Iterable<? extends SonarAnalyzer.FileIssues.Issue> values) {
        if (issueBuilder_ == null) {
          ensureIssueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, issue_);
          onChanged();
        } else {
          issueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public Builder clearIssue() {
        if (issueBuilder_ == null) {
          issue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          issueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public Builder removeIssue(int index) {
        if (issueBuilder_ == null) {
          ensureIssueIsMutable();
          issue_.remove(index);
          onChanged();
        } else {
          issueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public SonarAnalyzer.FileIssues.Issue.Builder getIssueBuilder(
          int index) {
        return getIssueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public SonarAnalyzer.FileIssues.IssueOrBuilder getIssueOrBuilder(
          int index) {
        if (issueBuilder_ == null) {
          return issue_.get(index);  } else {
          return issueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public java.util.List<? extends SonarAnalyzer.FileIssues.IssueOrBuilder>
           getIssueOrBuilderList() {
        if (issueBuilder_ != null) {
          return issueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(issue_);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public SonarAnalyzer.FileIssues.Issue.Builder addIssueBuilder() {
        return getIssueFieldBuilder().addBuilder(
            SonarAnalyzer.FileIssues.Issue.getDefaultInstance());
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public SonarAnalyzer.FileIssues.Issue.Builder addIssueBuilder(
          int index) {
        return getIssueFieldBuilder().addBuilder(
            index, SonarAnalyzer.FileIssues.Issue.getDefaultInstance());
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues.Issue issue = 2;</code>
       */
      public java.util.List<SonarAnalyzer.FileIssues.Issue.Builder>
           getIssueBuilderList() {
        return getIssueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SonarAnalyzer.FileIssues.Issue, SonarAnalyzer.FileIssues.Issue.Builder, SonarAnalyzer.FileIssues.IssueOrBuilder>
          getIssueFieldBuilder() {
        if (issueBuilder_ == null) {
          issueBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SonarAnalyzer.FileIssues.Issue, SonarAnalyzer.FileIssues.Issue.Builder, SonarAnalyzer.FileIssues.IssueOrBuilder>(
                  issue_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          issue_ = null;
        }
        return issueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:sonaranalyzer.FileIssues)
    }

    // @@protoc_insertion_point(class_scope:sonaranalyzer.FileIssues)
    private static final SonarAnalyzer.FileIssues DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SonarAnalyzer.FileIssues();
    }

    public static SonarAnalyzer.FileIssues getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FileIssues>
        PARSER = new com.google.protobuf.AbstractParser<FileIssues>() {
      public FileIssues parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FileIssues(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FileIssues> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FileIssues> getParserForType() {
      return PARSER;
    }

    public SonarAnalyzer.FileIssues getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultipleIssuesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sonaranalyzer.MultipleIssues)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
     */
    java.util.List<SonarAnalyzer.FileIssues>
        getIssuesList();
    /**
     * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
     */
    SonarAnalyzer.FileIssues getIssues(int index);
    /**
     * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
     */
    int getIssuesCount();
    /**
     * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
     */
    java.util.List<? extends SonarAnalyzer.FileIssuesOrBuilder>
        getIssuesOrBuilderList();
    /**
     * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
     */
    SonarAnalyzer.FileIssuesOrBuilder getIssuesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * MultipleIssues
   * </pre>
   *
   * Protobuf type {@code sonaranalyzer.MultipleIssues}
   */
  public  static final class MultipleIssues extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sonaranalyzer.MultipleIssues)
      MultipleIssuesOrBuilder {
    // Use MultipleIssues.newBuilder() to construct.
    private MultipleIssues(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultipleIssues() {
      issues_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MultipleIssues(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                issues_ = new java.util.ArrayList<SonarAnalyzer.FileIssues>();
                mutable_bitField0_ |= 0x00000001;
              }
              issues_.add(
                  input.readMessage(SonarAnalyzer.FileIssues.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          issues_ = java.util.Collections.unmodifiableList(issues_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SonarAnalyzer.internal_static_sonaranalyzer_MultipleIssues_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SonarAnalyzer.internal_static_sonaranalyzer_MultipleIssues_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SonarAnalyzer.MultipleIssues.class, SonarAnalyzer.MultipleIssues.Builder.class);
    }

    public static final int ISSUES_FIELD_NUMBER = 1;
    private java.util.List<SonarAnalyzer.FileIssues> issues_;
    /**
     * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
     */
    public java.util.List<SonarAnalyzer.FileIssues> getIssuesList() {
      return issues_;
    }
    /**
     * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
     */
    public java.util.List<? extends SonarAnalyzer.FileIssuesOrBuilder>
        getIssuesOrBuilderList() {
      return issues_;
    }
    /**
     * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
     */
    public int getIssuesCount() {
      return issues_.size();
    }
    /**
     * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
     */
    public SonarAnalyzer.FileIssues getIssues(int index) {
      return issues_.get(index);
    }
    /**
     * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
     */
    public SonarAnalyzer.FileIssuesOrBuilder getIssuesOrBuilder(
        int index) {
      return issues_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < issues_.size(); i++) {
        output.writeMessage(1, issues_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < issues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, issues_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SonarAnalyzer.MultipleIssues)) {
        return super.equals(obj);
      }
      SonarAnalyzer.MultipleIssues other = (SonarAnalyzer.MultipleIssues) obj;

      boolean result = true;
      result = result && getIssuesList()
          .equals(other.getIssuesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getIssuesCount() > 0) {
        hash = (37 * hash) + ISSUES_FIELD_NUMBER;
        hash = (53 * hash) + getIssuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SonarAnalyzer.MultipleIssues parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.MultipleIssues parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.MultipleIssues parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.MultipleIssues parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.MultipleIssues parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.MultipleIssues parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.MultipleIssues parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.MultipleIssues parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.MultipleIssues parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.MultipleIssues parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SonarAnalyzer.MultipleIssues prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MultipleIssues
     * </pre>
     *
     * Protobuf type {@code sonaranalyzer.MultipleIssues}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sonaranalyzer.MultipleIssues)
        SonarAnalyzer.MultipleIssuesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SonarAnalyzer.internal_static_sonaranalyzer_MultipleIssues_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SonarAnalyzer.internal_static_sonaranalyzer_MultipleIssues_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SonarAnalyzer.MultipleIssues.class, SonarAnalyzer.MultipleIssues.Builder.class);
      }

      // Construct using org.sonarsource.dotnet.protobuf.SonarAnalyzer.MultipleIssues.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getIssuesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (issuesBuilder_ == null) {
          issues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          issuesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SonarAnalyzer.internal_static_sonaranalyzer_MultipleIssues_descriptor;
      }

      public SonarAnalyzer.MultipleIssues getDefaultInstanceForType() {
        return SonarAnalyzer.MultipleIssues.getDefaultInstance();
      }

      public SonarAnalyzer.MultipleIssues build() {
        SonarAnalyzer.MultipleIssues result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SonarAnalyzer.MultipleIssues buildPartial() {
        SonarAnalyzer.MultipleIssues result = new SonarAnalyzer.MultipleIssues(this);
        int from_bitField0_ = bitField0_;
        if (issuesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            issues_ = java.util.Collections.unmodifiableList(issues_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.issues_ = issues_;
        } else {
          result.issues_ = issuesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SonarAnalyzer.MultipleIssues) {
          return mergeFrom((SonarAnalyzer.MultipleIssues)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SonarAnalyzer.MultipleIssues other) {
        if (other == SonarAnalyzer.MultipleIssues.getDefaultInstance()) return this;
        if (issuesBuilder_ == null) {
          if (!other.issues_.isEmpty()) {
            if (issues_.isEmpty()) {
              issues_ = other.issues_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureIssuesIsMutable();
              issues_.addAll(other.issues_);
            }
            onChanged();
          }
        } else {
          if (!other.issues_.isEmpty()) {
            if (issuesBuilder_.isEmpty()) {
              issuesBuilder_.dispose();
              issuesBuilder_ = null;
              issues_ = other.issues_;
              bitField0_ = (bitField0_ & ~0x00000001);
              issuesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getIssuesFieldBuilder() : null;
            } else {
              issuesBuilder_.addAllMessages(other.issues_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SonarAnalyzer.MultipleIssues parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SonarAnalyzer.MultipleIssues) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SonarAnalyzer.FileIssues> issues_ =
        java.util.Collections.emptyList();
      private void ensureIssuesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          issues_ = new java.util.ArrayList<SonarAnalyzer.FileIssues>(issues_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SonarAnalyzer.FileIssues, SonarAnalyzer.FileIssues.Builder, SonarAnalyzer.FileIssuesOrBuilder> issuesBuilder_;

      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public java.util.List<SonarAnalyzer.FileIssues> getIssuesList() {
        if (issuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(issues_);
        } else {
          return issuesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public int getIssuesCount() {
        if (issuesBuilder_ == null) {
          return issues_.size();
        } else {
          return issuesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public SonarAnalyzer.FileIssues getIssues(int index) {
        if (issuesBuilder_ == null) {
          return issues_.get(index);
        } else {
          return issuesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public Builder setIssues(
          int index, SonarAnalyzer.FileIssues value) {
        if (issuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIssuesIsMutable();
          issues_.set(index, value);
          onChanged();
        } else {
          issuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public Builder setIssues(
          int index, SonarAnalyzer.FileIssues.Builder builderForValue) {
        if (issuesBuilder_ == null) {
          ensureIssuesIsMutable();
          issues_.set(index, builderForValue.build());
          onChanged();
        } else {
          issuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public Builder addIssues(SonarAnalyzer.FileIssues value) {
        if (issuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIssuesIsMutable();
          issues_.add(value);
          onChanged();
        } else {
          issuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public Builder addIssues(
          int index, SonarAnalyzer.FileIssues value) {
        if (issuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIssuesIsMutable();
          issues_.add(index, value);
          onChanged();
        } else {
          issuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public Builder addIssues(
          SonarAnalyzer.FileIssues.Builder builderForValue) {
        if (issuesBuilder_ == null) {
          ensureIssuesIsMutable();
          issues_.add(builderForValue.build());
          onChanged();
        } else {
          issuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public Builder addIssues(
          int index, SonarAnalyzer.FileIssues.Builder builderForValue) {
        if (issuesBuilder_ == null) {
          ensureIssuesIsMutable();
          issues_.add(index, builderForValue.build());
          onChanged();
        } else {
          issuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public Builder addAllIssues(
          java.lang.Iterable<? extends SonarAnalyzer.FileIssues> values) {
        if (issuesBuilder_ == null) {
          ensureIssuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, issues_);
          onChanged();
        } else {
          issuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public Builder clearIssues() {
        if (issuesBuilder_ == null) {
          issues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          issuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public Builder removeIssues(int index) {
        if (issuesBuilder_ == null) {
          ensureIssuesIsMutable();
          issues_.remove(index);
          onChanged();
        } else {
          issuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public SonarAnalyzer.FileIssues.Builder getIssuesBuilder(
          int index) {
        return getIssuesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public SonarAnalyzer.FileIssuesOrBuilder getIssuesOrBuilder(
          int index) {
        if (issuesBuilder_ == null) {
          return issues_.get(index);  } else {
          return issuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public java.util.List<? extends SonarAnalyzer.FileIssuesOrBuilder>
           getIssuesOrBuilderList() {
        if (issuesBuilder_ != null) {
          return issuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(issues_);
        }
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public SonarAnalyzer.FileIssues.Builder addIssuesBuilder() {
        return getIssuesFieldBuilder().addBuilder(
            SonarAnalyzer.FileIssues.getDefaultInstance());
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public SonarAnalyzer.FileIssues.Builder addIssuesBuilder(
          int index) {
        return getIssuesFieldBuilder().addBuilder(
            index, SonarAnalyzer.FileIssues.getDefaultInstance());
      }
      /**
       * <code>repeated .sonaranalyzer.FileIssues issues = 1;</code>
       */
      public java.util.List<SonarAnalyzer.FileIssues.Builder>
           getIssuesBuilderList() {
        return getIssuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SonarAnalyzer.FileIssues, SonarAnalyzer.FileIssues.Builder, SonarAnalyzer.FileIssuesOrBuilder>
          getIssuesFieldBuilder() {
        if (issuesBuilder_ == null) {
          issuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SonarAnalyzer.FileIssues, SonarAnalyzer.FileIssues.Builder, SonarAnalyzer.FileIssuesOrBuilder>(
                  issues_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          issues_ = null;
        }
        return issuesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:sonaranalyzer.MultipleIssues)
    }

    // @@protoc_insertion_point(class_scope:sonaranalyzer.MultipleIssues)
    private static final SonarAnalyzer.MultipleIssues DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SonarAnalyzer.MultipleIssues();
    }

    public static SonarAnalyzer.MultipleIssues getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultipleIssues>
        PARSER = new com.google.protobuf.AbstractParser<MultipleIssues>() {
      public MultipleIssues parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MultipleIssues(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultipleIssues> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultipleIssues> getParserForType() {
      return PARSER;
    }

    public SonarAnalyzer.MultipleIssues getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncodingInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sonaranalyzer.EncodingInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string file_path = 1;</code>
     */
    java.lang.String getFilePath();
    /**
     * <code>string file_path = 1;</code>
     */
    com.google.protobuf.ByteString
        getFilePathBytes();

    /**
     * <code>string encoding = 2;</code>
     */
    java.lang.String getEncoding();
    /**
     * <code>string encoding = 2;</code>
     */
    com.google.protobuf.ByteString
        getEncodingBytes();
  }
  /**
   * Protobuf type {@code sonaranalyzer.EncodingInfo}
   */
  public  static final class EncodingInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sonaranalyzer.EncodingInfo)
      EncodingInfoOrBuilder {
    // Use EncodingInfo.newBuilder() to construct.
    private EncodingInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncodingInfo() {
      filePath_ = "";
      encoding_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private EncodingInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              filePath_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              encoding_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SonarAnalyzer.internal_static_sonaranalyzer_EncodingInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SonarAnalyzer.internal_static_sonaranalyzer_EncodingInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SonarAnalyzer.EncodingInfo.class, SonarAnalyzer.EncodingInfo.Builder.class);
    }

    public static final int FILE_PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object filePath_;
    /**
     * <code>string file_path = 1;</code>
     */
    public java.lang.String getFilePath() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filePath_ = s;
        return s;
      }
    }
    /**
     * <code>string file_path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFilePathBytes() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENCODING_FIELD_NUMBER = 2;
    private volatile java.lang.Object encoding_;
    /**
     * <code>string encoding = 2;</code>
     */
    public java.lang.String getEncoding() {
      java.lang.Object ref = encoding_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        encoding_ = s;
        return s;
      }
    }
    /**
     * <code>string encoding = 2;</code>
     */
    public com.google.protobuf.ByteString
        getEncodingBytes() {
      java.lang.Object ref = encoding_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        encoding_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFilePathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, filePath_);
      }
      if (!getEncodingBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, encoding_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFilePathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, filePath_);
      }
      if (!getEncodingBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, encoding_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SonarAnalyzer.EncodingInfo)) {
        return super.equals(obj);
      }
      SonarAnalyzer.EncodingInfo other = (SonarAnalyzer.EncodingInfo) obj;

      boolean result = true;
      result = result && getFilePath()
          .equals(other.getFilePath());
      result = result && getEncoding()
          .equals(other.getEncoding());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FILE_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getFilePath().hashCode();
      hash = (37 * hash) + ENCODING_FIELD_NUMBER;
      hash = (53 * hash) + getEncoding().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SonarAnalyzer.EncodingInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.EncodingInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.EncodingInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SonarAnalyzer.EncodingInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SonarAnalyzer.EncodingInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.EncodingInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.EncodingInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.EncodingInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SonarAnalyzer.EncodingInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SonarAnalyzer.EncodingInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SonarAnalyzer.EncodingInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sonaranalyzer.EncodingInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sonaranalyzer.EncodingInfo)
        SonarAnalyzer.EncodingInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SonarAnalyzer.internal_static_sonaranalyzer_EncodingInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SonarAnalyzer.internal_static_sonaranalyzer_EncodingInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SonarAnalyzer.EncodingInfo.class, SonarAnalyzer.EncodingInfo.Builder.class);
      }

      // Construct using org.sonarsource.dotnet.protobuf.SonarAnalyzer.EncodingInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        filePath_ = "";

        encoding_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SonarAnalyzer.internal_static_sonaranalyzer_EncodingInfo_descriptor;
      }

      public SonarAnalyzer.EncodingInfo getDefaultInstanceForType() {
        return SonarAnalyzer.EncodingInfo.getDefaultInstance();
      }

      public SonarAnalyzer.EncodingInfo build() {
        SonarAnalyzer.EncodingInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SonarAnalyzer.EncodingInfo buildPartial() {
        SonarAnalyzer.EncodingInfo result = new SonarAnalyzer.EncodingInfo(this);
        result.filePath_ = filePath_;
        result.encoding_ = encoding_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SonarAnalyzer.EncodingInfo) {
          return mergeFrom((SonarAnalyzer.EncodingInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SonarAnalyzer.EncodingInfo other) {
        if (other == SonarAnalyzer.EncodingInfo.getDefaultInstance()) return this;
        if (!other.getFilePath().isEmpty()) {
          filePath_ = other.filePath_;
          onChanged();
        }
        if (!other.getEncoding().isEmpty()) {
          encoding_ = other.encoding_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SonarAnalyzer.EncodingInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SonarAnalyzer.EncodingInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object filePath_ = "";
      /**
       * <code>string file_path = 1;</code>
       */
      public java.lang.String getFilePath() {
        java.lang.Object ref = filePath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filePath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFilePathBytes() {
        java.lang.Object ref = filePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder setFilePath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder clearFilePath() {
        
        filePath_ = getDefaultInstance().getFilePath();
        onChanged();
        return this;
      }
      /**
       * <code>string file_path = 1;</code>
       */
      public Builder setFilePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filePath_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object encoding_ = "";
      /**
       * <code>string encoding = 2;</code>
       */
      public java.lang.String getEncoding() {
        java.lang.Object ref = encoding_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          encoding_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string encoding = 2;</code>
       */
      public com.google.protobuf.ByteString
          getEncodingBytes() {
        java.lang.Object ref = encoding_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          encoding_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string encoding = 2;</code>
       */
      public Builder setEncoding(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        encoding_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string encoding = 2;</code>
       */
      public Builder clearEncoding() {
        
        encoding_ = getDefaultInstance().getEncoding();
        onChanged();
        return this;
      }
      /**
       * <code>string encoding = 2;</code>
       */
      public Builder setEncodingBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        encoding_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:sonaranalyzer.EncodingInfo)
    }

    // @@protoc_insertion_point(class_scope:sonaranalyzer.EncodingInfo)
    private static final SonarAnalyzer.EncodingInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SonarAnalyzer.EncodingInfo();
    }

    public static SonarAnalyzer.EncodingInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EncodingInfo>
        PARSER = new com.google.protobuf.AbstractParser<EncodingInfo>() {
      public EncodingInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new EncodingInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EncodingInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EncodingInfo> getParserForType() {
      return PARSER;
    }

    public SonarAnalyzer.EncodingInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sonaranalyzer_TextRange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sonaranalyzer_TextRange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sonaranalyzer_TokenTypeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sonaranalyzer_TokenTypeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sonaranalyzer_TokenTypeInfo_TokenInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sonaranalyzer_TokenTypeInfo_TokenInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sonaranalyzer_SymbolReferenceInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sonaranalyzer_SymbolReferenceInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sonaranalyzer_SymbolReferenceInfo_SymbolReference_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sonaranalyzer_SymbolReferenceInfo_SymbolReference_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sonaranalyzer_CopyPasteTokenInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sonaranalyzer_CopyPasteTokenInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sonaranalyzer_CopyPasteTokenInfo_TokenInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sonaranalyzer_CopyPasteTokenInfo_TokenInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sonaranalyzer_MetricsInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sonaranalyzer_MetricsInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sonaranalyzer_FileIssues_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sonaranalyzer_FileIssues_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sonaranalyzer_FileIssues_Issue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sonaranalyzer_FileIssues_Issue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sonaranalyzer_MultipleIssues_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sonaranalyzer_MultipleIssues_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sonaranalyzer_EncodingInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sonaranalyzer_EncodingInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024AnalyzerReport.proto\022\rsonaranalyzer\"[\n" +
      "\tTextRange\022\022\n\nstart_line\030\001 \001(\005\022\020\n\010end_li" +
      "ne\030\002 \001(\005\022\024\n\014start_offset\030\003 \001(\005\022\022\n\nend_of" +
      "fset\030\004 \001(\005\"\307\001\n\rTokenTypeInfo\022\021\n\tfile_pat" +
      "h\030\001 \001(\t\022:\n\ntoken_info\030\002 \003(\0132&.sonaranaly" +
      "zer.TokenTypeInfo.TokenInfo\032g\n\tTokenInfo" +
      "\022,\n\ntoken_type\030\001 \001(\0162\030.sonaranalyzer.Tok" +
      "enType\022,\n\ntext_range\030\002 \001(\0132\030.sonaranalyz" +
      "er.TextRange\"\336\001\n\023SymbolReferenceInfo\022\021\n\t" +
      "file_path\030\001 \001(\t\022E\n\treference\030\002 \003(\01322.son",
      "aranalyzer.SymbolReferenceInfo.SymbolRef" +
      "erence\032m\n\017SymbolReference\022-\n\013declaration" +
      "\030\001 \001(\0132\030.sonaranalyzer.TextRange\022+\n\trefe" +
      "rence\030\002 \003(\0132\030.sonaranalyzer.TextRange\"\270\001" +
      "\n\022CopyPasteTokenInfo\022\021\n\tfile_path\030\001 \001(\t\022" +
      "?\n\ntoken_info\030\002 \003(\0132+.sonaranalyzer.Copy" +
      "PasteTokenInfo.TokenInfo\032N\n\tTokenInfo\022\023\n" +
      "\013token_value\030\001 \001(\t\022,\n\ntext_range\030\002 \001(\0132\030" +
      ".sonaranalyzer.TextRange\"\223\003\n\013MetricsInfo" +
      "\022\021\n\tfile_path\030\001 \001(\t\022\023\n\013class_count\030\002 \001(\005",
      "\022\027\n\017statement_count\030\003 \001(\005\022\026\n\016function_co" +
      "unt\030\004 \001(\005\022\030\n\020public_api_count\030\005 \001(\005\022%\n\035p" +
      "ublic_undocumented_api_count\030\006 \001(\005\022\022\n\nco" +
      "mplexity\030\007 \001(\005\022\035\n\025complexity_in_classes\030" +
      "\010 \001(\005\022\037\n\027complexity_in_functions\030\t \001(\005\022$" +
      "\n\034file_complexity_distribution\030\n \001(\t\022(\n " +
      "function_complexity_distribution\030\013 \001(\t\022\030" +
      "\n\020no_sonar_comment\030\014 \003(\005\022\031\n\021non_blank_co" +
      "mment\030\r \003(\005\022\021\n\tcode_line\030\016 \003(\005\"\241\001\n\nFileI" +
      "ssues\022\021\n\tfile_path\030\001 \001(\t\022.\n\005issue\030\002 \003(\0132",
      "\037.sonaranalyzer.FileIssues.Issue\032P\n\005Issu" +
      "e\022\n\n\002id\030\001 \001(\t\022\017\n\007message\030\002 \001(\t\022*\n\010locati" +
      "on\030\003 \001(\0132\030.sonaranalyzer.TextRange\";\n\016Mu" +
      "ltipleIssues\022)\n\006issues\030\001 \003(\0132\031.sonaranal" +
      "yzer.FileIssues\"3\n\014EncodingInfo\022\021\n\tfile_" +
      "path\030\001 \001(\t\022\020\n\010encoding\030\002 \001(\t*j\n\tTokenTyp" +
      "e\022\013\n\007UNKNOWN\020\000\022\r\n\tTYPE_NAME\020\001\022\023\n\017NUMERIC" +
      "_LITERAL\020\002\022\022\n\016STRING_LITERAL\020\003\022\013\n\007KEYWOR" +
      "D\020\004\022\013\n\007COMMENT\020\005BK\n\037org.sonarsource.dotn" +
      "et.protobufB\rSonarAnalyzerH\001\252\002\026SonarAnal",
      "yzer.Protobufb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_sonaranalyzer_TextRange_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_sonaranalyzer_TextRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sonaranalyzer_TextRange_descriptor,
        new java.lang.String[] { "StartLine", "EndLine", "StartOffset", "EndOffset", });
    internal_static_sonaranalyzer_TokenTypeInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_sonaranalyzer_TokenTypeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sonaranalyzer_TokenTypeInfo_descriptor,
        new java.lang.String[] { "FilePath", "TokenInfo", });
    internal_static_sonaranalyzer_TokenTypeInfo_TokenInfo_descriptor =
      internal_static_sonaranalyzer_TokenTypeInfo_descriptor.getNestedTypes().get(0);
    internal_static_sonaranalyzer_TokenTypeInfo_TokenInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sonaranalyzer_TokenTypeInfo_TokenInfo_descriptor,
        new java.lang.String[] { "TokenType", "TextRange", });
    internal_static_sonaranalyzer_SymbolReferenceInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_sonaranalyzer_SymbolReferenceInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sonaranalyzer_SymbolReferenceInfo_descriptor,
        new java.lang.String[] { "FilePath", "Reference", });
    internal_static_sonaranalyzer_SymbolReferenceInfo_SymbolReference_descriptor =
      internal_static_sonaranalyzer_SymbolReferenceInfo_descriptor.getNestedTypes().get(0);
    internal_static_sonaranalyzer_SymbolReferenceInfo_SymbolReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sonaranalyzer_SymbolReferenceInfo_SymbolReference_descriptor,
        new java.lang.String[] { "Declaration", "Reference", });
    internal_static_sonaranalyzer_CopyPasteTokenInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_sonaranalyzer_CopyPasteTokenInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sonaranalyzer_CopyPasteTokenInfo_descriptor,
        new java.lang.String[] { "FilePath", "TokenInfo", });
    internal_static_sonaranalyzer_CopyPasteTokenInfo_TokenInfo_descriptor =
      internal_static_sonaranalyzer_CopyPasteTokenInfo_descriptor.getNestedTypes().get(0);
    internal_static_sonaranalyzer_CopyPasteTokenInfo_TokenInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sonaranalyzer_CopyPasteTokenInfo_TokenInfo_descriptor,
        new java.lang.String[] { "TokenValue", "TextRange", });
    internal_static_sonaranalyzer_MetricsInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_sonaranalyzer_MetricsInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sonaranalyzer_MetricsInfo_descriptor,
        new java.lang.String[] { "FilePath", "ClassCount", "StatementCount", "FunctionCount", "PublicApiCount", "PublicUndocumentedApiCount", "Complexity", "ComplexityInClasses", "ComplexityInFunctions", "FileComplexityDistribution", "FunctionComplexityDistribution", "NoSonarComment", "NonBlankComment", "CodeLine", });
    internal_static_sonaranalyzer_FileIssues_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_sonaranalyzer_FileIssues_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sonaranalyzer_FileIssues_descriptor,
        new java.lang.String[] { "FilePath", "Issue", });
    internal_static_sonaranalyzer_FileIssues_Issue_descriptor =
      internal_static_sonaranalyzer_FileIssues_descriptor.getNestedTypes().get(0);
    internal_static_sonaranalyzer_FileIssues_Issue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sonaranalyzer_FileIssues_Issue_descriptor,
        new java.lang.String[] { "Id", "Message", "Location", });
    internal_static_sonaranalyzer_MultipleIssues_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_sonaranalyzer_MultipleIssues_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sonaranalyzer_MultipleIssues_descriptor,
        new java.lang.String[] { "Issues", });
    internal_static_sonaranalyzer_EncodingInfo_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_sonaranalyzer_EncodingInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sonaranalyzer_EncodingInfo_descriptor,
        new java.lang.String[] { "FilePath", "Encoding", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
